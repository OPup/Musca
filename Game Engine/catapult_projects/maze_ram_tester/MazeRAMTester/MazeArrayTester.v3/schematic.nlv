
# Program: Catapult University Version
# Version: 2011a.126
#    File: Nlview netlist

module new "MazeArrayTester:core:fsm" "orig"
load port {clk} input -attr xrf 2612 -attr oid 1 -attr @path {/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm/clk}
load port {rst} input -attr xrf 2613 -attr oid 2 -attr @path {/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm/rst}
load portBus {fsm_output(4:0)} output 5 {fsm_output(4)} {fsm_output(3)} {fsm_output(2)} {fsm_output(1)} {fsm_output(0)} -attr xrf 2614 -attr oid 3 -attr @path {/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm/fsm_output}
load port {st(main)_tr0} input -attr @path {/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm/st(main)_tr0}
load port {st(if:for:for)#1_tr0} input -attr @path {/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm/st(if:for:for)#1_tr0}
load port {st(if:for)_tr0} input -attr @path {/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm/st(if:for)_tr0}
load net {clk} -attr xrf 2615 -attr oid 4
load net {clk} -port {clk} -attr xrf 2616 -attr oid 5
load net {rst} -attr xrf 2617 -attr oid 6
load net {rst} -port {rst} -attr xrf 2618 -attr oid 7
load net {fsm_output(0)} -attr vt d
load net {fsm_output(1)} -attr vt d
load net {fsm_output(2)} -attr vt d
load net {fsm_output(3)} -attr vt d
load net {fsm_output(4)} -attr vt d
load netBundle {fsm_output} 5 {fsm_output(0)} {fsm_output(1)} {fsm_output(2)} {fsm_output(3)} {fsm_output(4)} -attr xrf 2619 -attr oid 8 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm/fsm_output}
load net {fsm_output(0)} -port {fsm_output(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm/fsm_output}
load net {fsm_output(1)} -port {fsm_output(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm/fsm_output}
load net {fsm_output(2)} -port {fsm_output(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm/fsm_output}
load net {fsm_output(3)} -port {fsm_output(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm/fsm_output}
load net {fsm_output(4)} -port {fsm_output(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm/fsm_output}
load net {st(main)_tr0} -attr vt d
load net {st(main)_tr0} -port {st(main)_tr0}
load net {st(if:for:for)#1_tr0} -attr vt d
load net {st(if:for:for)#1_tr0} -port {st(if:for:for)#1_tr0}
load net {st(if:for)_tr0} -attr vt d
load net {st(if:for)_tr0} -port {st(if:for)_tr0}
### END MODULE 

module new "MazeArrayTester:core" "orig"
load port {clk} input -attr xrf 2620 -attr oid 9 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/clk}
load port {rst} input -attr xrf 2621 -attr oid 10 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/rst}
load portBus {row:rsc:mgc_out_stdreg.d(5:0)} output 6 {row:rsc:mgc_out_stdreg.d(5)} {row:rsc:mgc_out_stdreg.d(4)} {row:rsc:mgc_out_stdreg.d(3)} {row:rsc:mgc_out_stdreg.d(2)} {row:rsc:mgc_out_stdreg.d(1)} {row:rsc:mgc_out_stdreg.d(0)} -attr xrf 2622 -attr oid 11 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load portBus {col:rsc:mgc_out_stdreg.d(5:0)} output 6 {col:rsc:mgc_out_stdreg.d(5)} {col:rsc:mgc_out_stdreg.d(4)} {col:rsc:mgc_out_stdreg.d(3)} {col:rsc:mgc_out_stdreg.d(2)} {col:rsc:mgc_out_stdreg.d(1)} {col:rsc:mgc_out_stdreg.d(0)} -attr xrf 2623 -attr oid 12 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load portBus {out:rsc:mgc_out_stdreg.d(3:0)} output 4 {out:rsc:mgc_out_stdreg.d(3)} {out:rsc:mgc_out_stdreg.d(2)} {out:rsc:mgc_out_stdreg.d(1)} {out:rsc:mgc_out_stdreg.d(0)} -attr xrf 2624 -attr oid 13 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load port {write:rsc:mgc_out_stdreg.d} output -attr xrf 2625 -attr oid 14 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/write:rsc:mgc_out_stdreg.d}
load symbol "mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6,0,2,1,7)" "INTERFACE" RTL(+) boxcolor 0 \
     portBus {a(5:0)} input 6 {a(5)} {a(4)} {a(3)} {a(2)} {a(1)} {a(0)} \
     portBus {b(1:0)} input 2 {b(1)} {b(0)} \
     portBus {z(6:0)} output 7 {z(6)} {z(5)} {z(4)} {z(3)} {z(2)} {z(1)} {z(0)} \

load symbol "MazeArrayTester:core:fsm" "orig" GEN \
     port {clk#1} input \
     port {rst#1} input \
     portBus {fsm_output(4:0)} output 5 {fsm_output(4)} {fsm_output(3)} {fsm_output(2)} {fsm_output(1)} {fsm_output(0)} \
     port {st(main)_tr0} input \
     port {st(if:for:for)#1_tr0} input \
     port {st(if:for)_tr0} input \

load symbol "and(2,1)" "INTERFACE" AND boxcolor 0 \
     portBus {A0(0:0)} input 1 {A0(0)} \
     portBus {A1(0:0)} input 1 {A1(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "nor(2,1)" "INTERFACE" NOR boxcolor 0 \
     portBus {A0(0:0)} input 1 {A0(0)} \
     portBus {A1(0:0)} input 1 {A1(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "or(2,1)" "INTERFACE" OR boxcolor 0 \
     portBus {A0(0:0)} input 1 {A0(0)} \
     portBus {A1(0:0)} input 1 {A1(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "reg(1,1,0,0,1)" "INTERFACE" GEN boxcolor 1 \
     portBus {D(0:0)} input 1 {D(0)} \
     portBus {DRs(0:0)} input 1 {DRs(0)} \
     port {clk} input.clk \
     portBus {Rs(0:0)} input 1 {Rs(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "nand(6,1)" "INTERFACE" NAND boxcolor 0 \
     portBus {A0(0:0)} input 1 {A0(0)} \
     portBus {A1(0:0)} input 1 {A1(0)} \
     portBus {A2(0:0)} input 1 {A2(0)} \
     portBus {A3(0:0)} input 1 {A3(0)} \
     portBus {A4(0:0)} input 1 {A4(0)} \
     portBus {A5(0:0)} input 1 {A5(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "or(6,1)" "INTERFACE" OR boxcolor 0 \
     portBus {A0(0:0)} input 1 {A0(0)} \
     portBus {A1(0:0)} input 1 {A1(0)} \
     portBus {A2(0:0)} input 1 {A2(0)} \
     portBus {A3(0:0)} input 1 {A3(0)} \
     portBus {A4(0:0)} input 1 {A4(0)} \
     portBus {A5(0:0)} input 1 {A5(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "nand(2,1)" "INTERFACE" NAND boxcolor 0 \
     portBus {A0(0:0)} input 1 {A0(0)} \
     portBus {A1(0:0)} input 1 {A1(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "mux(2,4)" "INTERFACE" MUX boxcolor 0 \
     portBus {A0(3:0)} input 4 {A0(3)} {A0(2)} {A0(1)} {A0(0)} \
     portBus {A1(3:0)} input 4 {A1(3)} {A1(2)} {A1(1)} {A1(0)} \
     portBus {S(0:0)} input.top 1 {S(0)} \
     portBus {Z(3:0)} output 4 {Z(3)} {Z(2)} {Z(1)} {Z(0)} \

load symbol "reg(4,1,0,0,1)" "INTERFACE" GEN boxcolor 1 \
     portBus {D(3:0)} input 4 {D(3)} {D(2)} {D(1)} {D(0)} \
     portBus {DRs(3:0)} input 4 {DRs(3)} {DRs(2)} {DRs(1)} {DRs(0)} \
     port {clk} input.clk \
     portBus {Rs(0:0)} input 1 {Rs(0)} \
     portBus {Z(3:0)} output 4 {Z(3)} {Z(2)} {Z(1)} {Z(0)} \

load symbol "not(1)" "INTERFACE" INV boxcolor 0 \
     portBus {A(0:0)} input 1 {A(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "and(3,1)" "INTERFACE" AND boxcolor 0 \
     portBus {A0(0:0)} input 1 {A0(0)} \
     portBus {A1(0:0)} input 1 {A1(0)} \
     portBus {A2(0:0)} input 1 {A2(0)} \
     portBus {Z(0:0)} output 1 {Z(0)} \

load symbol "mux(2,6)" "INTERFACE" MUX boxcolor 0 \
     portBus {A0(5:0)} input 6 {A0(5)} {A0(4)} {A0(3)} {A0(2)} {A0(1)} {A0(0)} \
     portBus {A1(5:0)} input 6 {A1(5)} {A1(4)} {A1(3)} {A1(2)} {A1(1)} {A1(0)} \
     portBus {S(0:0)} input.top 1 {S(0)} \
     portBus {Z(5:0)} output 6 {Z(5)} {Z(4)} {Z(3)} {Z(2)} {Z(1)} {Z(0)} \

load symbol "and(2,6)" "INTERFACE" AND boxcolor 0 \
     portBus {A0(5:0)} input 6 {A0(5)} {A0(4)} {A0(3)} {A0(2)} {A0(1)} {A0(0)} \
     portBus {A1(5:0)} input 6 {A1(5)} {A1(4)} {A1(3)} {A1(2)} {A1(1)} {A1(0)} \
     portBus {Z(5:0)} output 6 {Z(5)} {Z(4)} {Z(3)} {Z(2)} {Z(1)} {Z(0)} \

load symbol "reg(6,1,0,0,1)" "INTERFACE" GEN boxcolor 1 \
     portBus {D(5:0)} input 6 {D(5)} {D(4)} {D(3)} {D(2)} {D(1)} {D(0)} \
     portBus {DRs(5:0)} input 6 {DRs(5)} {DRs(4)} {DRs(3)} {DRs(2)} {DRs(1)} {DRs(0)} \
     port {clk} input.clk \
     portBus {Rs(0:0)} input 1 {Rs(0)} \
     portBus {Z(5:0)} output 6 {Z(5)} {Z(4)} {Z(3)} {Z(2)} {Z(1)} {Z(0)} \

load symbol "mux1h(3,6)" "INTERFACE" GEN boxcolor 0 \
     portBus {A0(5:0)} input 6 {A0(5)} {A0(4)} {A0(3)} {A0(2)} {A0(1)} {A0(0)} \
     portBus {A1(5:0)} input 6 {A1(5)} {A1(4)} {A1(3)} {A1(2)} {A1(1)} {A1(0)} \
     portBus {A2(5:0)} input 6 {A2(5)} {A2(4)} {A2(3)} {A2(2)} {A2(1)} {A2(0)} \
     port {S0} input \
     port {S1} input \
     port {S2} input \
     portBus {Z(5:0)} output 6 {Z(5)} {Z(4)} {Z(3)} {Z(2)} {Z(1)} {Z(0)} \

load symbol "reg(7,1,0,0,1)" "INTERFACE" GEN boxcolor 1 \
     portBus {D(6:0)} input 7 {D(6)} {D(5)} {D(4)} {D(3)} {D(2)} {D(1)} {D(0)} \
     portBus {DRs(6:0)} input 7 {DRs(6)} {DRs(5)} {DRs(4)} {DRs(3)} {DRs(2)} {DRs(1)} {DRs(0)} \
     port {clk} input.clk \
     portBus {Rs(0:0)} input 1 {Rs(0)} \
     portBus {Z(6:0)} output 7 {Z(6)} {Z(5)} {Z(4)} {Z(3)} {Z(2)} {Z(1)} {Z(0)} \

load net {if:for:for:j#1.sva#1(0)} -attr vt d
load net {if:for:for:j#1.sva#1(1)} -attr vt d
load net {if:for:for:j#1.sva#1(2)} -attr vt d
load net {if:for:for:j#1.sva#1(3)} -attr vt d
load net {if:for:for:j#1.sva#1(4)} -attr vt d
load net {if:for:for:j#1.sva#1(5)} -attr vt d
load net {if:for:for:j#1.sva#1(6)} -attr vt d
load netBundle {if:for:for:j#1.sva#1} 7 {if:for:for:j#1.sva#1(0)} {if:for:for:j#1.sva#1(1)} {if:for:for:j#1.sva#1(2)} {if:for:for:j#1.sva#1(3)} {if:for:for:j#1.sva#1(4)} {if:for:for:j#1.sva#1(5)} {if:for:for:j#1.sva#1(6)} -attr xrf 2626 -attr oid 15 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#1}
load net {if:for:i#1.sva#2(0)} -attr vt d
load net {if:for:i#1.sva#2(1)} -attr vt d
load net {if:for:i#1.sva#2(2)} -attr vt d
load net {if:for:i#1.sva#2(3)} -attr vt d
load net {if:for:i#1.sva#2(4)} -attr vt d
load net {if:for:i#1.sva#2(5)} -attr vt d
load netBundle {if:for:i#1.sva#2} 6 {if:for:i#1.sva#2(0)} {if:for:i#1.sva#2(1)} {if:for:i#1.sva#2(2)} {if:for:i#1.sva#2(3)} {if:for:i#1.sva#2(4)} {if:for:i#1.sva#2(5)} -attr xrf 2627 -attr oid 16 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:for:j#1.sva#2(0)} -attr vt d
load net {if:for:for:j#1.sva#2(1)} -attr vt d
load net {if:for:for:j#1.sva#2(2)} -attr vt d
load net {if:for:for:j#1.sva#2(3)} -attr vt d
load net {if:for:for:j#1.sva#2(4)} -attr vt d
load net {if:for:for:j#1.sva#2(5)} -attr vt d
load netBundle {if:for:for:j#1.sva#2} 6 {if:for:for:j#1.sva#2(0)} {if:for:for:j#1.sva#2(1)} {if:for:for:j#1.sva#2(2)} {if:for:for:j#1.sva#2(3)} {if:for:for:j#1.sva#2(4)} {if:for:for:j#1.sva#2(5)} -attr xrf 2628 -attr oid 17 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#2}
load net {z.out(0)} -attr vt d
load net {z.out(1)} -attr vt d
load net {z.out(2)} -attr vt d
load net {z.out(3)} -attr vt d
load net {z.out(4)} -attr vt d
load net {z.out(5)} -attr vt d
load net {z.out(6)} -attr vt d
load netBundle {z.out} 7 {z.out(0)} {z.out(1)} {z.out(2)} {z.out(3)} {z.out(4)} {z.out(5)} {z.out(6)} -attr xrf 2629 -attr oid 18 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {mux.itm(0)} -attr vt d
load net {mux.itm(1)} -attr vt d
load net {mux.itm(2)} -attr vt d
load net {mux.itm(3)} -attr vt d
load netBundle {mux.itm} 4 {mux.itm(0)} {mux.itm(1)} {mux.itm(2)} {mux.itm(3)} -attr xrf 2630 -attr oid 19 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux.itm}
load net {conc.itm(0)} -attr vt d
load net {conc.itm(1)} -attr vt d
load net {conc.itm(2)} -attr vt d
load net {conc.itm(3)} -attr vt d
load netBundle {conc.itm} 4 {conc.itm(0)} {conc.itm(1)} {conc.itm(2)} {conc.itm(3)} -attr xrf 2631 -attr oid 20 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/conc.itm}
load net {and#16.itm(0)} -attr vt d
load net {and#16.itm(1)} -attr vt d
load net {and#16.itm(2)} -attr vt d
load net {and#16.itm(3)} -attr vt d
load net {and#16.itm(4)} -attr vt d
load net {and#16.itm(5)} -attr vt d
load netBundle {and#16.itm} 6 {and#16.itm(0)} {and#16.itm(1)} {and#16.itm(2)} {and#16.itm(3)} {and#16.itm(4)} {and#16.itm(5)} -attr xrf 2632 -attr oid 21 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16.itm}
load net {mux#3.itm(0)} -attr vt d
load net {mux#3.itm(1)} -attr vt d
load net {mux#3.itm(2)} -attr vt d
load net {mux#3.itm(3)} -attr vt d
load net {mux#3.itm(4)} -attr vt d
load net {mux#3.itm(5)} -attr vt d
load netBundle {mux#3.itm} 6 {mux#3.itm(0)} {mux#3.itm(1)} {mux#3.itm(2)} {mux#3.itm(3)} {mux#3.itm(4)} {mux#3.itm(5)} -attr xrf 2633 -attr oid 22 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3.itm}
load net {slc(if:for:for:j#1.sva#1)#5.itm(0)} -attr vt d
load net {slc(if:for:for:j#1.sva#1)#5.itm(1)} -attr vt d
load net {slc(if:for:for:j#1.sva#1)#5.itm(2)} -attr vt d
load net {slc(if:for:for:j#1.sva#1)#5.itm(3)} -attr vt d
load net {slc(if:for:for:j#1.sva#1)#5.itm(4)} -attr vt d
load net {slc(if:for:for:j#1.sva#1)#5.itm(5)} -attr vt d
load netBundle {slc(if:for:for:j#1.sva#1)#5.itm} 6 {slc(if:for:for:j#1.sva#1)#5.itm(0)} {slc(if:for:for:j#1.sva#1)#5.itm(1)} {slc(if:for:for:j#1.sva#1)#5.itm(2)} {slc(if:for:for:j#1.sva#1)#5.itm(3)} {slc(if:for:for:j#1.sva#1)#5.itm(4)} {slc(if:for:for:j#1.sva#1)#5.itm(5)} -attr xrf 2634 -attr oid 23 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#5.itm}
load net {exs.itm(0)} -attr vt d
load net {exs.itm(1)} -attr vt d
load net {exs.itm(2)} -attr vt d
load net {exs.itm(3)} -attr vt d
load net {exs.itm(4)} -attr vt d
load net {exs.itm(5)} -attr vt d
load netBundle {exs.itm} 6 {exs.itm(0)} {exs.itm(1)} {exs.itm(2)} {exs.itm(3)} {exs.itm(4)} {exs.itm(5)} -attr xrf 2635 -attr oid 24 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs.itm}
load net {and#17.itm(0)} -attr vt d
load net {and#17.itm(1)} -attr vt d
load net {and#17.itm(2)} -attr vt d
load net {and#17.itm(3)} -attr vt d
load net {and#17.itm(4)} -attr vt d
load net {and#17.itm(5)} -attr vt d
load netBundle {and#17.itm} 6 {and#17.itm(0)} {and#17.itm(1)} {and#17.itm(2)} {and#17.itm(3)} {and#17.itm(4)} {and#17.itm(5)} -attr xrf 2636 -attr oid 25 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17.itm}
load net {mux1h#2.itm(0)} -attr vt d
load net {mux1h#2.itm(1)} -attr vt d
load net {mux1h#2.itm(2)} -attr vt d
load net {mux1h#2.itm(3)} -attr vt d
load net {mux1h#2.itm(4)} -attr vt d
load net {mux1h#2.itm(5)} -attr vt d
load netBundle {mux1h#2.itm} 6 {mux1h#2.itm(0)} {mux1h#2.itm(1)} {mux1h#2.itm(2)} {mux1h#2.itm(3)} {mux1h#2.itm(4)} {mux1h#2.itm(5)} -attr xrf 2637 -attr oid 26 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2.itm}
load net {slc(if:for:i#1.sva#3)#2.itm(0)} -attr vt d
load net {slc(if:for:i#1.sva#3)#2.itm(1)} -attr vt d
load net {slc(if:for:i#1.sva#3)#2.itm(2)} -attr vt d
load net {slc(if:for:i#1.sva#3)#2.itm(3)} -attr vt d
load net {slc(if:for:i#1.sva#3)#2.itm(4)} -attr vt d
load net {slc(if:for:i#1.sva#3)#2.itm(5)} -attr vt d
load netBundle {slc(if:for:i#1.sva#3)#2.itm} 6 {slc(if:for:i#1.sva#3)#2.itm(0)} {slc(if:for:i#1.sva#3)#2.itm(1)} {slc(if:for:i#1.sva#3)#2.itm(2)} {slc(if:for:i#1.sva#3)#2.itm(3)} {slc(if:for:i#1.sva#3)#2.itm(4)} {slc(if:for:i#1.sva#3)#2.itm(5)} -attr xrf 2638 -attr oid 27 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3)#2.itm}
load net {exs#1.itm(0)} -attr vt d
load net {exs#1.itm(1)} -attr vt d
load net {exs#1.itm(2)} -attr vt d
load net {exs#1.itm(3)} -attr vt d
load net {exs#1.itm(4)} -attr vt d
load net {exs#1.itm(5)} -attr vt d
load netBundle {exs#1.itm} 6 {exs#1.itm(0)} {exs#1.itm(1)} {exs#1.itm(2)} {exs#1.itm(3)} {exs#1.itm(4)} {exs#1.itm(5)} -attr xrf 2639 -attr oid 28 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#1.itm}
load net {and#21.itm(0)} -attr vt d
load net {and#21.itm(1)} -attr vt d
load net {and#21.itm(2)} -attr vt d
load net {and#21.itm(3)} -attr vt d
load net {and#21.itm(4)} -attr vt d
load net {and#21.itm(5)} -attr vt d
load netBundle {and#21.itm} 6 {and#21.itm(0)} {and#21.itm(1)} {and#21.itm(2)} {and#21.itm(3)} {and#21.itm(4)} {and#21.itm(5)} -attr xrf 2640 -attr oid 29 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21.itm}
load net {mux#5.itm(0)} -attr vt d
load net {mux#5.itm(1)} -attr vt d
load net {mux#5.itm(2)} -attr vt d
load net {mux#5.itm(3)} -attr vt d
load net {mux#5.itm(4)} -attr vt d
load net {mux#5.itm(5)} -attr vt d
load netBundle {mux#5.itm} 6 {mux#5.itm(0)} {mux#5.itm(1)} {mux#5.itm(2)} {mux#5.itm(3)} {mux#5.itm(4)} {mux#5.itm(5)} -attr xrf 2641 -attr oid 30 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5.itm}
load net {slc(if:for:i#1.sva#3).itm(0)} -attr vt d
load net {slc(if:for:i#1.sva#3).itm(1)} -attr vt d
load net {slc(if:for:i#1.sva#3).itm(2)} -attr vt d
load net {slc(if:for:i#1.sva#3).itm(3)} -attr vt d
load net {slc(if:for:i#1.sva#3).itm(4)} -attr vt d
load net {slc(if:for:i#1.sva#3).itm(5)} -attr vt d
load netBundle {slc(if:for:i#1.sva#3).itm} 6 {slc(if:for:i#1.sva#3).itm(0)} {slc(if:for:i#1.sva#3).itm(1)} {slc(if:for:i#1.sva#3).itm(2)} {slc(if:for:i#1.sva#3).itm(3)} {slc(if:for:i#1.sva#3).itm(4)} {slc(if:for:i#1.sva#3).itm(5)} -attr xrf 2642 -attr oid 31 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3).itm}
load net {exs#2.itm(0)} -attr vt d
load net {exs#2.itm(1)} -attr vt d
load net {exs#2.itm(2)} -attr vt d
load net {exs#2.itm(3)} -attr vt d
load net {exs#2.itm(4)} -attr vt d
load net {exs#2.itm(5)} -attr vt d
load netBundle {exs#2.itm} 6 {exs#2.itm(0)} {exs#2.itm(1)} {exs#2.itm(2)} {exs#2.itm(3)} {exs#2.itm(4)} {exs#2.itm(5)} -attr xrf 2643 -attr oid 32 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#2.itm}
load net {and#22.itm(0)} -attr vt d
load net {and#22.itm(1)} -attr vt d
load net {and#22.itm(2)} -attr vt d
load net {and#22.itm(3)} -attr vt d
load net {and#22.itm(4)} -attr vt d
load net {and#22.itm(5)} -attr vt d
load netBundle {and#22.itm} 6 {and#22.itm(0)} {and#22.itm(1)} {and#22.itm(2)} {and#22.itm(3)} {and#22.itm(4)} {and#22.itm(5)} -attr xrf 2644 -attr oid 33 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22.itm}
load net {slc(if:for:for:j#1.sva#1)#6.itm(0)} -attr vt d
load net {slc(if:for:for:j#1.sva#1)#6.itm(1)} -attr vt d
load net {slc(if:for:for:j#1.sva#1)#6.itm(2)} -attr vt d
load net {slc(if:for:for:j#1.sva#1)#6.itm(3)} -attr vt d
load net {slc(if:for:for:j#1.sva#1)#6.itm(4)} -attr vt d
load net {slc(if:for:for:j#1.sva#1)#6.itm(5)} -attr vt d
load netBundle {slc(if:for:for:j#1.sva#1)#6.itm} 6 {slc(if:for:for:j#1.sva#1)#6.itm(0)} {slc(if:for:for:j#1.sva#1)#6.itm(1)} {slc(if:for:for:j#1.sva#1)#6.itm(2)} {slc(if:for:for:j#1.sva#1)#6.itm(3)} {slc(if:for:for:j#1.sva#1)#6.itm(4)} {slc(if:for:for:j#1.sva#1)#6.itm(5)} -attr xrf 2645 -attr oid 34 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#6.itm}
load net {exs#3.itm(0)} -attr vt d
load net {exs#3.itm(1)} -attr vt d
load net {exs#3.itm(2)} -attr vt d
load net {exs#3.itm(3)} -attr vt d
load net {exs#3.itm(4)} -attr vt d
load net {exs#3.itm(5)} -attr vt d
load netBundle {exs#3.itm} 6 {exs#3.itm(0)} {exs#3.itm(1)} {exs#3.itm(2)} {exs#3.itm(3)} {exs#3.itm(4)} {exs#3.itm(5)} -attr xrf 2646 -attr oid 35 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#3.itm}
load net {mux#4.itm(0)} -attr vt d
load net {mux#4.itm(1)} -attr vt d
load net {mux#4.itm(2)} -attr vt d
load net {mux#4.itm(3)} -attr vt d
load net {mux#4.itm(4)} -attr vt d
load net {mux#4.itm(5)} -attr vt d
load netBundle {mux#4.itm} 6 {mux#4.itm(0)} {mux#4.itm(1)} {mux#4.itm(2)} {mux#4.itm(3)} {mux#4.itm(4)} {mux#4.itm(5)} -attr xrf 2647 -attr oid 36 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4.itm}
load net {clk} -attr xrf 2648 -attr oid 37
load net {clk} -port {clk} -attr xrf 2649 -attr oid 38
load net {rst} -attr xrf 2650 -attr oid 39
load net {rst} -port {rst} -attr xrf 2651 -attr oid 40
load net {row:rsc:mgc_out_stdreg.d(0)} -attr vt d
load net {row:rsc:mgc_out_stdreg.d(1)} -attr vt d
load net {row:rsc:mgc_out_stdreg.d(2)} -attr vt d
load net {row:rsc:mgc_out_stdreg.d(3)} -attr vt d
load net {row:rsc:mgc_out_stdreg.d(4)} -attr vt d
load net {row:rsc:mgc_out_stdreg.d(5)} -attr vt d
load netBundle {row:rsc:mgc_out_stdreg.d} 6 {row:rsc:mgc_out_stdreg.d(0)} {row:rsc:mgc_out_stdreg.d(1)} {row:rsc:mgc_out_stdreg.d(2)} {row:rsc:mgc_out_stdreg.d(3)} {row:rsc:mgc_out_stdreg.d(4)} {row:rsc:mgc_out_stdreg.d(5)} -attr xrf 2652 -attr oid 41 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(0)} -port {row:rsc:mgc_out_stdreg.d(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(1)} -port {row:rsc:mgc_out_stdreg.d(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(2)} -port {row:rsc:mgc_out_stdreg.d(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(3)} -port {row:rsc:mgc_out_stdreg.d(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(4)} -port {row:rsc:mgc_out_stdreg.d(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(5)} -port {row:rsc:mgc_out_stdreg.d(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(0)} -attr vt d
load net {col:rsc:mgc_out_stdreg.d(1)} -attr vt d
load net {col:rsc:mgc_out_stdreg.d(2)} -attr vt d
load net {col:rsc:mgc_out_stdreg.d(3)} -attr vt d
load net {col:rsc:mgc_out_stdreg.d(4)} -attr vt d
load net {col:rsc:mgc_out_stdreg.d(5)} -attr vt d
load netBundle {col:rsc:mgc_out_stdreg.d} 6 {col:rsc:mgc_out_stdreg.d(0)} {col:rsc:mgc_out_stdreg.d(1)} {col:rsc:mgc_out_stdreg.d(2)} {col:rsc:mgc_out_stdreg.d(3)} {col:rsc:mgc_out_stdreg.d(4)} {col:rsc:mgc_out_stdreg.d(5)} -attr xrf 2653 -attr oid 42 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(0)} -port {col:rsc:mgc_out_stdreg.d(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(1)} -port {col:rsc:mgc_out_stdreg.d(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(2)} -port {col:rsc:mgc_out_stdreg.d(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(3)} -port {col:rsc:mgc_out_stdreg.d(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(4)} -port {col:rsc:mgc_out_stdreg.d(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(5)} -port {col:rsc:mgc_out_stdreg.d(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d(0)} -attr vt d
load net {out:rsc:mgc_out_stdreg.d(1)} -attr vt d
load net {out:rsc:mgc_out_stdreg.d(2)} -attr vt d
load net {out:rsc:mgc_out_stdreg.d(3)} -attr vt d
load netBundle {out:rsc:mgc_out_stdreg.d} 4 {out:rsc:mgc_out_stdreg.d(0)} {out:rsc:mgc_out_stdreg.d(1)} {out:rsc:mgc_out_stdreg.d(2)} {out:rsc:mgc_out_stdreg.d(3)} -attr xrf 2654 -attr oid 43 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d(0)} -port {out:rsc:mgc_out_stdreg.d(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d(1)} -port {out:rsc:mgc_out_stdreg.d(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d(2)} -port {out:rsc:mgc_out_stdreg.d(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d(3)} -port {out:rsc:mgc_out_stdreg.d(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load net {write:rsc:mgc_out_stdreg.d} -attr xrf 2655 -attr oid 44 -attr vt d
load net {write:rsc:mgc_out_stdreg.d} -port {write:rsc:mgc_out_stdreg.d} -attr xrf 2656 -attr oid 45 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/write:rsc:mgc_out_stdreg.d}
load inst "MazeArrayTester:core:fsm:inst" "MazeArrayTester:core:fsm" "orig" -attr xrf 2657 -attr oid 46 -attr @path {/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm:inst} -attr area 2.000000 -attr hier "/MazeArrayTester/MazeArrayTester:core/MazeArrayTester:core:fsm" -pg 1 -lvl 3
load net {clk} -pin  "MazeArrayTester:core:fsm:inst" {clk#1} -attr xrf 2658 -attr oid 47 -attr @path {/MazeArrayTester/MazeArrayTester:core/clk}
load net {rst} -pin  "MazeArrayTester:core:fsm:inst" {rst#1} -attr xrf 2659 -attr oid 48 -attr @path {/MazeArrayTester/MazeArrayTester:core/rst}
load net {fsm_output#1(0)} -pin  "MazeArrayTester:core:fsm:inst" {fsm_output(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/fsm_output}
load net {fsm_output#1(1)} -pin  "MazeArrayTester:core:fsm:inst" {fsm_output(1)} -attr @path {/MazeArrayTester/MazeArrayTester:core/fsm_output}
load net {fsm_output#1(2)} -pin  "MazeArrayTester:core:fsm:inst" {fsm_output(2)} -attr @path {/MazeArrayTester/MazeArrayTester:core/fsm_output}
load net {fsm_output#1(3)} -pin  "MazeArrayTester:core:fsm:inst" {fsm_output(3)} -attr @path {/MazeArrayTester/MazeArrayTester:core/fsm_output}
load net {fsm_output#1(4)} -pin  "MazeArrayTester:core:fsm:inst" {fsm_output(4)} -attr @path {/MazeArrayTester/MazeArrayTester:core/fsm_output}
load net {written.sva} -pin  "MazeArrayTester:core:fsm:inst" {st(main)_tr0} -attr xrf 2660 -attr oid 49 -attr @path {/MazeArrayTester/MazeArrayTester:core/written.sva}
load net {if:for:for:j#1.sva#1(6)} -pin  "MazeArrayTester:core:fsm:inst" {st(if:for:for)#1_tr0} -attr xrf 2661 -attr oid 50 -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#1.itm}
load net {z.out(6)} -pin  "MazeArrayTester:core:fsm:inst" {st(if:for)_tr0} -attr xrf 2662 -attr oid 51 -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:acc#1.tmp).itm}
load inst "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" "mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6,0,2,1,7)" "INTERFACE" -attr xrf 2663 -attr oid 52 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6,0,2,1,7)} -attr area 7.000000 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6,0,2,1,7)"
load net {mux#4.itm(0)} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {a(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4.itm}
load net {mux#4.itm(1)} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {a(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4.itm}
load net {mux#4.itm(2)} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {a(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4.itm}
load net {mux#4.itm(3)} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {a(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4.itm}
load net {mux#4.itm(4)} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {a(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4.itm}
load net {mux#4.itm(5)} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {a(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4.itm}
load net {PWR} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {b(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C1_2}
load net {GND} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {b(1)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C1_2}
load net {z.out(0)} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {z(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {z.out(1)} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {z(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {z.out(2)} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {z(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {z.out(3)} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {z(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {z.out(4)} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {z(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {z.out(5)} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {z(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {z.out(6)} -pin  "if:for:mgc_Altera-Cyclone-III-6_beh_psr.mgc_add(6_0_2_1_7)" {z(6)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load inst "and#1" "and(2,1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/and#1} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(1,2)"
load net {written.sva} -pin  "and#1" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/written.sva}
load net {fsm_output#1(1)} -pin  "and#1" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#6.itm}
load net {and#1.itm} -pin  "and#1" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/and#1.itm}
load inst "and" "and(2,1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/and} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(1,2)"
load net {fsm_output#1(4)} -pin  "and" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#12.itm}
load net {z.out(6)} -pin  "and" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:acc#1.tmp)#3.itm}
load net {and.itm} -pin  "and" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/and.itm}
load inst "nor" "nor(2,1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/nor} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_nor(1,2)"
load net {and#1.itm} -pin  "nor" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/and#1.itm}
load net {and.itm} -pin  "nor" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/and.itm}
load net {nor.itm} -pin  "nor" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/nor.itm}
load inst "and#15" "and(2,1)" "INTERFACE" -attr xrf 2664 -attr oid 53 -attr @path {/MazeArrayTester/MazeArrayTester:core/and#15} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(1,2)"
load net {write:rsc:mgc_out_stdreg.d} -pin  "and#15" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/write:rsc:mgc_out_stdreg.d}
load net {nor.itm} -pin  "and#15" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/nor.itm}
load net {and#15.itm} -pin  "and#15" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/and#15.itm}
load inst "or#13" "or(2,1)" "INTERFACE" -attr xrf 2665 -attr oid 54 -attr @path {/MazeArrayTester/MazeArrayTester:core/or#13} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_or(1,2)"
load net {and#15.itm} -pin  "or#13" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/and#15.itm}
load net {fsm_output#1(0)} -pin  "or#13" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output).itm}
load net {or#13.itm} -pin  "or#13" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/or#13.itm}
load inst "reg(write:rsc:mgc_out_stdreg.d)" "reg(1,1,0,0,1)" "INTERFACE" -attr xrf 2666 -attr oid 55 -attr @path {/MazeArrayTester/MazeArrayTester:core/reg(write:rsc:mgc_out_stdreg.d)}
load net {or#13.itm} -pin  "reg(write:rsc:mgc_out_stdreg.d)" {D(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/or#13.itm}
load net {GND} -pin  "reg(write:rsc:mgc_out_stdreg.d)" {DRs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_1#1}
load net {clk} -pin  "reg(write:rsc:mgc_out_stdreg.d)" {clk} -attr xrf 2667 -attr oid 56 -attr @path {/MazeArrayTester/MazeArrayTester:core/clk}
load net {rst} -pin  "reg(write:rsc:mgc_out_stdreg.d)" {Rs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/rst}
load net {write:rsc:mgc_out_stdreg.d} -pin  "reg(write:rsc:mgc_out_stdreg.d)" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/write:rsc:mgc_out_stdreg.d}
load inst "if:for:for:else:if:nand#1" "nand(6,1)" "INTERFACE" -attr xrf 2668 -attr oid 57 -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:else:if:nand#1} -attr area 2.029408 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_nand(1,6)"
load net {if:for:i#1.sva#2(5)} -pin  "if:for:for:else:if:nand#1" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#2)#6.itm}
load net {if:for:i#1.sva#2(4)} -pin  "if:for:for:else:if:nand#1" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#2)#7.itm}
load net {if:for:i#1.sva#2(3)} -pin  "if:for:for:else:if:nand#1" {A2(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#2)#8.itm}
load net {if:for:i#1.sva#2(2)} -pin  "if:for:for:else:if:nand#1" {A3(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#2)#9.itm}
load net {if:for:i#1.sva#2(1)} -pin  "if:for:for:else:if:nand#1" {A4(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#2)#10.itm}
load net {if:for:i#1.sva#2(0)} -pin  "if:for:for:else:if:nand#1" {A5(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#2)#11.itm}
load net {if:for:for:else:if:nand#1.itm} -pin  "if:for:for:else:if:nand#1" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:else:if:nand#1.itm}
load inst "if:for:for:else:if:or" "or(6,1)" "INTERFACE" -attr xrf 2669 -attr oid 58 -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:else:if:or} -attr area 2.029408 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_or(1,6)"
load net {if:for:i#1.sva#2(5)} -pin  "if:for:for:else:if:or" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#2).itm}
load net {if:for:i#1.sva#2(4)} -pin  "if:for:for:else:if:or" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#2)#1.itm}
load net {if:for:i#1.sva#2(3)} -pin  "if:for:for:else:if:or" {A2(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#2)#2.itm}
load net {if:for:i#1.sva#2(2)} -pin  "if:for:for:else:if:or" {A3(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#2)#3.itm}
load net {if:for:i#1.sva#2(1)} -pin  "if:for:for:else:if:or" {A4(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#2)#4.itm}
load net {if:for:i#1.sva#2(0)} -pin  "if:for:for:else:if:or" {A5(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#2)#5.itm}
load net {if:for:for:else:if:or.itm} -pin  "if:for:for:else:if:or" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:else:if:or.itm}
load inst "if:for:for:else:if:nand" "nand(2,1)" "INTERFACE" -attr xrf 2670 -attr oid 59 -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:else:if:nand} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_nand(1,2)"
load net {if:for:for:else:if:nand#1.itm} -pin  "if:for:for:else:if:nand" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:else:if:nand#1.itm}
load net {if:for:for:else:if:or.itm} -pin  "if:for:for:else:if:nand" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:else:if:or.itm}
load net {if:for:for:else:if:nand.itm} -pin  "if:for:for:else:if:nand" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:else:if:nand.itm}
load inst "if:for:for:if:nand#1" "nand(6,1)" "INTERFACE" -attr xrf 2671 -attr oid 60 -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:if:nand#1} -attr area 2.029408 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_nand(1,6)"
load net {if:for:for:j#1.sva#2(5)} -pin  "if:for:for:if:nand#1" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#2)#6.itm}
load net {if:for:for:j#1.sva#2(4)} -pin  "if:for:for:if:nand#1" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#2)#10.itm}
load net {if:for:for:j#1.sva#2(3)} -pin  "if:for:for:if:nand#1" {A2(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#2)#9.itm}
load net {if:for:for:j#1.sva#2(2)} -pin  "if:for:for:if:nand#1" {A3(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#2)#8.itm}
load net {if:for:for:j#1.sva#2(1)} -pin  "if:for:for:if:nand#1" {A4(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#2)#7.itm}
load net {if:for:for:j#1.sva#2(0)} -pin  "if:for:for:if:nand#1" {A5(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#2)#11.itm}
load net {if:for:for:if:nand#1.itm} -pin  "if:for:for:if:nand#1" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:if:nand#1.itm}
load inst "if:for:for:if:or" "or(6,1)" "INTERFACE" -attr xrf 2672 -attr oid 61 -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:if:or} -attr area 2.029408 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_or(1,6)"
load net {if:for:for:j#1.sva#2(5)} -pin  "if:for:for:if:or" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#2).itm}
load net {if:for:for:j#1.sva#2(4)} -pin  "if:for:for:if:or" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#2)#1.itm}
load net {if:for:for:j#1.sva#2(3)} -pin  "if:for:for:if:or" {A2(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#2)#2.itm}
load net {if:for:for:j#1.sva#2(2)} -pin  "if:for:for:if:or" {A3(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#2)#3.itm}
load net {if:for:for:j#1.sva#2(1)} -pin  "if:for:for:if:or" {A4(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#2)#4.itm}
load net {if:for:for:j#1.sva#2(0)} -pin  "if:for:for:if:or" {A5(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#2)#5.itm}
load net {if:for:for:if:or.itm} -pin  "if:for:for:if:or" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:if:or.itm}
load inst "if:for:for:if:nand" "nand(2,1)" "INTERFACE" -attr xrf 2673 -attr oid 62 -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:if:nand} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_nand(1,2)"
load net {if:for:for:if:nand#1.itm} -pin  "if:for:for:if:nand" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:if:nand#1.itm}
load net {if:for:for:if:or.itm} -pin  "if:for:for:if:nand" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:if:or.itm}
load net {if:for:for:if:nand.itm} -pin  "if:for:for:if:nand" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:if:nand.itm}
load inst "if:for:for:or" "or(2,1)" "INTERFACE" -attr xrf 2674 -attr oid 63 -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:or} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_or(1,2)"
load net {if:for:for:else:if:nand.itm} -pin  "if:for:for:or" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:else:if:nand.itm}
load net {if:for:for:if:nand.itm} -pin  "if:for:for:or" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:if:nand.itm}
load net {if:for:for:or.itm} -pin  "if:for:for:or" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:or.itm}
load inst "mux" "mux(2,4)" "INTERFACE" -attr xrf 2675 -attr oid 64 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux} -attr area 3.678692 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_mux(4,1,2)"
load net {if:for:for:or.itm} -pin  "mux" {A0(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/conc.itm}
load net {GND} -pin  "mux" {A0(1)} -attr @path {/MazeArrayTester/MazeArrayTester:core/conc.itm}
load net {GND} -pin  "mux" {A0(2)} -attr @path {/MazeArrayTester/MazeArrayTester:core/conc.itm}
load net {GND} -pin  "mux" {A0(3)} -attr @path {/MazeArrayTester/MazeArrayTester:core/conc.itm}
load net {out:rsc:mgc_out_stdreg.d(0)} -pin  "mux" {A1(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d(1)} -pin  "mux" {A1(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d(2)} -pin  "mux" {A1(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d(3)} -pin  "mux" {A1(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load net {fsm_output#1(2)} -pin  "mux" {S(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#2.itm}
load net {mux.itm(0)} -pin  "mux" {Z(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux.itm}
load net {mux.itm(1)} -pin  "mux" {Z(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux.itm}
load net {mux.itm(2)} -pin  "mux" {Z(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux.itm}
load net {mux.itm(3)} -pin  "mux" {Z(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux.itm}
load inst "reg(out:rsc:mgc_out_stdreg.d)" "reg(4,1,0,0,1)" "INTERFACE" -attr xrf 2676 -attr oid 65 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/reg(out:rsc:mgc_out_stdreg.d)}
load net {mux.itm(0)} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {D(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux.itm}
load net {mux.itm(1)} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {D(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux.itm}
load net {mux.itm(2)} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {D(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux.itm}
load net {mux.itm(3)} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {D(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux.itm}
load net {GND} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {DRs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_4}
load net {GND} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {DRs(1)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_4}
load net {GND} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {DRs(2)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_4}
load net {GND} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {DRs(3)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_4}
load net {clk} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {clk} -attr xrf 2677 -attr oid 66 -attr @path {/MazeArrayTester/MazeArrayTester:core/clk}
load net {rst} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {Rs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/rst}
load net {out:rsc:mgc_out_stdreg.d(0)} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {Z(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d(1)} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {Z(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d(2)} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {Z(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d(3)} -pin  "reg(out:rsc:mgc_out_stdreg.d)" {Z(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/out:rsc:mgc_out_stdreg.d}
load inst "not#16" "not(1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/not#16} -attr area 0.001000 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_not(1)"
load net {fsm_output#1(1)} -pin  "not#16" {A(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#19.itm}
load net {not#16.itm} -pin  "not#16" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not#16.itm}
load inst "or#8" "or(2,1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/or#8} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_or(1,2)"
load net {written.sva} -pin  "or#8" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/written.sva}
load net {not#16.itm} -pin  "or#8" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not#16.itm}
load net {or#8.itm} -pin  "or#8" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/or#8.itm}
load inst "not#14" "not(1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/not#14} -attr area 0.001000 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_not(1)"
load net {fsm_output#1(4)} -pin  "not#14" {A(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#20.itm}
load net {not#14.itm} -pin  "not#14" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not#14.itm}
load inst "or#7" "or(2,1)" "INTERFACE" -attr vt c -attr @path {/MazeArrayTester/MazeArrayTester:core/or#7} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_or(1,2)"
load net {not#14.itm} -pin  "or#7" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not#14.itm}
load net {z.out(6)} -pin  "or#7" {A1(0)} -attr vt c -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:acc#1.tmp)#5.itm}
load net {or#7.itm} -pin  "or#7" {Z(0)} -attr vt c -attr @path {/MazeArrayTester/MazeArrayTester:core/or#7.itm}
load inst "not#10" "not(1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/not#10} -attr area 0.001000 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_not(1)"
load net {fsm_output#1(3)} -pin  "not#10" {A(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#11.itm}
load net {not#10.itm} -pin  "not#10" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not#10.itm}
load inst "or#6" "or(2,1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/or#6} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_or(1,2)"
load net {if:for:for:j#1.sva#1(6)} -pin  "or#6" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#4.itm}
load net {not#10.itm} -pin  "or#6" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not#10.itm}
load net {or#6.itm} -pin  "or#6" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/or#6.itm}
load inst "and#8" "and(3,1)" "INTERFACE" -attr vt c -attr @path {/MazeArrayTester/MazeArrayTester:core/and#8} -attr area 1.055476 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(1,3)"
load net {or#8.itm} -pin  "and#8" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/or#8.itm}
load net {or#7.itm} -pin  "and#8" {A1(0)} -attr vt c -attr @path {/MazeArrayTester/MazeArrayTester:core/or#7.itm}
load net {or#6.itm} -pin  "and#8" {A2(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/or#6.itm}
load net {and#8.cse} -pin  "and#8" {Z(0)} -attr vt c -attr @path {/MazeArrayTester/MazeArrayTester:core/and#8.cse}
load inst "mux#3" "mux(2,6)" "INTERFACE" -attr xrf 2678 -attr oid 67 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3} -attr area 5.517538 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_mux(6,1,2)"
load net {col:rsc:mgc_out_stdreg.d(0)} -pin  "mux#3" {A0(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(1)} -pin  "mux#3" {A0(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(2)} -pin  "mux#3" {A0(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(3)} -pin  "mux#3" {A0(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(4)} -pin  "mux#3" {A0(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(5)} -pin  "mux#3" {A0(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {if:for:for:j#1.sva#1(0)} -pin  "mux#3" {A1(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#5.itm}
load net {if:for:for:j#1.sva#1(1)} -pin  "mux#3" {A1(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#5.itm}
load net {if:for:for:j#1.sva#1(2)} -pin  "mux#3" {A1(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#5.itm}
load net {if:for:for:j#1.sva#1(3)} -pin  "mux#3" {A1(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#5.itm}
load net {if:for:for:j#1.sva#1(4)} -pin  "mux#3" {A1(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#5.itm}
load net {if:for:for:j#1.sva#1(5)} -pin  "mux#3" {A1(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#5.itm}
load net {and#8.cse} -pin  "mux#3" {S(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/and#8.cse}
load net {mux#3.itm(0)} -pin  "mux#3" {Z(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3.itm}
load net {mux#3.itm(1)} -pin  "mux#3" {Z(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3.itm}
load net {mux#3.itm(2)} -pin  "mux#3" {Z(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3.itm}
load net {mux#3.itm(3)} -pin  "mux#3" {Z(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3.itm}
load net {mux#3.itm(4)} -pin  "mux#3" {Z(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3.itm}
load net {mux#3.itm(5)} -pin  "mux#3" {Z(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3.itm}
load inst "nor#2" "nor(2,1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/nor#2} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_nor(1,2)"
load net {and.dcpl#5} -pin  "nor#2" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/and.dcpl#5}
load net {and.dcpl#4} -pin  "nor#2" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/and.dcpl#4}
load net {nor#2.itm} -pin  "nor#2" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/nor#2.itm}
load inst "and#16" "and(2,6)" "INTERFACE" -attr xrf 2679 -attr oid 68 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16} -attr area 4.379994 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(6,2)"
load net {mux#3.itm(0)} -pin  "and#16" {A0(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3.itm}
load net {mux#3.itm(1)} -pin  "and#16" {A0(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3.itm}
load net {mux#3.itm(2)} -pin  "and#16" {A0(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3.itm}
load net {mux#3.itm(3)} -pin  "and#16" {A0(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3.itm}
load net {mux#3.itm(4)} -pin  "and#16" {A0(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3.itm}
load net {mux#3.itm(5)} -pin  "and#16" {A0(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#3.itm}
load net {nor#2.itm} -pin  "and#16" {A1(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs.itm}
load net {nor#2.itm} -pin  "and#16" {A1(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs.itm}
load net {nor#2.itm} -pin  "and#16" {A1(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs.itm}
load net {nor#2.itm} -pin  "and#16" {A1(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs.itm}
load net {nor#2.itm} -pin  "and#16" {A1(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs.itm}
load net {nor#2.itm} -pin  "and#16" {A1(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs.itm}
load net {and#16.itm(0)} -pin  "and#16" {Z(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16.itm}
load net {and#16.itm(1)} -pin  "and#16" {Z(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16.itm}
load net {and#16.itm(2)} -pin  "and#16" {Z(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16.itm}
load net {and#16.itm(3)} -pin  "and#16" {Z(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16.itm}
load net {and#16.itm(4)} -pin  "and#16" {Z(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16.itm}
load net {and#16.itm(5)} -pin  "and#16" {Z(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16.itm}
load inst "reg(col:rsc:mgc_out_stdreg.d)" "reg(6,1,0,0,1)" "INTERFACE" -attr xrf 2680 -attr oid 69 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/reg(col:rsc:mgc_out_stdreg.d)}
load net {and#16.itm(0)} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {D(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16.itm}
load net {and#16.itm(1)} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {D(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16.itm}
load net {and#16.itm(2)} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {D(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16.itm}
load net {and#16.itm(3)} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {D(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16.itm}
load net {and#16.itm(4)} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {D(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16.itm}
load net {and#16.itm(5)} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {D(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#16.itm}
load net {GND} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {DRs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {DRs(1)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {DRs(2)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {DRs(3)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {DRs(4)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {DRs(5)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {clk} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {clk} -attr xrf 2681 -attr oid 70 -attr @path {/MazeArrayTester/MazeArrayTester:core/clk}
load net {rst} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {Rs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/rst}
load net {col:rsc:mgc_out_stdreg.d(0)} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {Z(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(1)} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {Z(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(2)} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {Z(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(3)} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {Z(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(4)} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {Z(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d(5)} -pin  "reg(col:rsc:mgc_out_stdreg.d)" {Z(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/col:rsc:mgc_out_stdreg.d}
load inst "not#9" "not(1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/not#9} -attr area 0.001000 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_not(1)"
load net {if:for:for:j#1.sva#1(6)} -pin  "not#9" {A(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#3.itm}
load net {not#9.itm} -pin  "not#9" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not#9.itm}
load inst "and#6" "and(2,1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/and#6} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(1,2)"
load net {not#9.itm} -pin  "and#6" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not#9.itm}
load net {fsm_output#1(3)} -pin  "and#6" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#10.itm}
load net {and#6.itm} -pin  "and#6" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/and#6.itm}
load inst "mux1h#2" "mux1h(3,6)" "INTERFACE" -attr xrf 2682 -attr oid 71 -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2} -attr area 13.138744 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_mux1hot(6,3)"
load net {if:for:i#1.sva#2(0)} -pin  "mux1h#2" {A0(0)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(1)} -pin  "mux1h#2" {A0(1)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(2)} -pin  "mux1h#2" {A0(2)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(3)} -pin  "mux1h#2" {A0(3)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(4)} -pin  "mux1h#2" {A0(4)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(5)} -pin  "mux1h#2" {A0(5)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {z.out(0)} -pin  "mux1h#2" {A1(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3)#2.itm}
load net {z.out(1)} -pin  "mux1h#2" {A1(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3)#2.itm}
load net {z.out(2)} -pin  "mux1h#2" {A1(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3)#2.itm}
load net {z.out(3)} -pin  "mux1h#2" {A1(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3)#2.itm}
load net {z.out(4)} -pin  "mux1h#2" {A1(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3)#2.itm}
load net {z.out(5)} -pin  "mux1h#2" {A1(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3)#2.itm}
load net {row:rsc:mgc_out_stdreg.d(0)} -pin  "mux1h#2" {A2(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(1)} -pin  "mux1h#2" {A2(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(2)} -pin  "mux1h#2" {A2(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(3)} -pin  "mux1h#2" {A2(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(4)} -pin  "mux1h#2" {A2(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(5)} -pin  "mux1h#2" {A2(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {and#6.itm} -pin  "mux1h#2" {S0} -attr @path {/MazeArrayTester/MazeArrayTester:core/and#6.itm}
load net {and.dcpl#4} -pin  "mux1h#2" {S1} -attr @path {/MazeArrayTester/MazeArrayTester:core/and.dcpl#4}
load net {and#8.cse} -pin  "mux1h#2" {S2} -attr vt c -attr @path {/MazeArrayTester/MazeArrayTester:core/and#8.cse}
load net {mux1h#2.itm(0)} -pin  "mux1h#2" {Z(0)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2.itm}
load net {mux1h#2.itm(1)} -pin  "mux1h#2" {Z(1)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2.itm}
load net {mux1h#2.itm(2)} -pin  "mux1h#2" {Z(2)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2.itm}
load net {mux1h#2.itm(3)} -pin  "mux1h#2" {Z(3)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2.itm}
load net {mux1h#2.itm(4)} -pin  "mux1h#2" {Z(4)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2.itm}
load net {mux1h#2.itm(5)} -pin  "mux1h#2" {Z(5)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2.itm}
load inst "not#20" "not(1)" "INTERFACE" -attr xrf 2683 -attr oid 72 -attr @path {/MazeArrayTester/MazeArrayTester:core/not#20} -attr area 0.001000 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_not(1)"
load net {and.dcpl#5} -pin  "not#20" {A(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/and.dcpl#5}
load net {not#20.itm} -pin  "not#20" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not#20.itm}
load inst "and#17" "and(2,6)" "INTERFACE" -attr xrf 2684 -attr oid 73 -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17} -attr area 4.379994 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(6,2)"
load net {mux1h#2.itm(0)} -pin  "and#17" {A0(0)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2.itm}
load net {mux1h#2.itm(1)} -pin  "and#17" {A0(1)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2.itm}
load net {mux1h#2.itm(2)} -pin  "and#17" {A0(2)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2.itm}
load net {mux1h#2.itm(3)} -pin  "and#17" {A0(3)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2.itm}
load net {mux1h#2.itm(4)} -pin  "and#17" {A0(4)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2.itm}
load net {mux1h#2.itm(5)} -pin  "and#17" {A0(5)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux1h#2.itm}
load net {not#20.itm} -pin  "and#17" {A1(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#1.itm}
load net {not#20.itm} -pin  "and#17" {A1(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#1.itm}
load net {not#20.itm} -pin  "and#17" {A1(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#1.itm}
load net {not#20.itm} -pin  "and#17" {A1(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#1.itm}
load net {not#20.itm} -pin  "and#17" {A1(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#1.itm}
load net {not#20.itm} -pin  "and#17" {A1(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#1.itm}
load net {and#17.itm(0)} -pin  "and#17" {Z(0)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17.itm}
load net {and#17.itm(1)} -pin  "and#17" {Z(1)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17.itm}
load net {and#17.itm(2)} -pin  "and#17" {Z(2)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17.itm}
load net {and#17.itm(3)} -pin  "and#17" {Z(3)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17.itm}
load net {and#17.itm(4)} -pin  "and#17" {Z(4)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17.itm}
load net {and#17.itm(5)} -pin  "and#17" {Z(5)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17.itm}
load inst "reg(row:rsc:mgc_out_stdreg.d)" "reg(6,1,0,0,1)" "INTERFACE" -attr xrf 2685 -attr oid 74 -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/reg(row:rsc:mgc_out_stdreg.d)}
load net {and#17.itm(0)} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {D(0)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17.itm}
load net {and#17.itm(1)} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {D(1)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17.itm}
load net {and#17.itm(2)} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {D(2)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17.itm}
load net {and#17.itm(3)} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {D(3)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17.itm}
load net {and#17.itm(4)} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {D(4)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17.itm}
load net {and#17.itm(5)} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {D(5)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/and#17.itm}
load net {GND} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {DRs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {DRs(1)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {DRs(2)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {DRs(3)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {DRs(4)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {DRs(5)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {clk} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {clk} -attr xrf 2686 -attr oid 75 -attr @path {/MazeArrayTester/MazeArrayTester:core/clk}
load net {rst} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {Rs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/rst}
load net {row:rsc:mgc_out_stdreg.d(0)} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {Z(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(1)} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {Z(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(2)} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {Z(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(3)} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {Z(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(4)} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {Z(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d(5)} -pin  "reg(row:rsc:mgc_out_stdreg.d)" {Z(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/row:rsc:mgc_out_stdreg.d}
load inst "or#12" "or(2,1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/or#12} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_or(1,2)"
load net {fsm_output#1(1)} -pin  "or#12" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#9.itm}
load net {fsm_output#1(4)} -pin  "or#12" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#15.itm}
load net {or#12.itm} -pin  "or#12" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/or#12.itm}
load inst "reg(written.sva)" "reg(1,1,0,0,1)" "INTERFACE" -attr xrf 2687 -attr oid 76 -attr @path {/MazeArrayTester/MazeArrayTester:core/reg(written.sva)}
load net {or#12.itm} -pin  "reg(written.sva)" {D(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/or#12.itm}
load net {GND} -pin  "reg(written.sva)" {DRs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_1#1}
load net {clk} -pin  "reg(written.sva)" {clk} -attr xrf 2688 -attr oid 77 -attr @path {/MazeArrayTester/MazeArrayTester:core/clk}
load net {rst} -pin  "reg(written.sva)" {Rs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/rst}
load net {written.sva} -pin  "reg(written.sva)" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/written.sva}
load inst "nor#1" "nor(2,1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/nor#1} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_nor(1,2)"
load net {fsm_output#1(1)} -pin  "nor#1" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#7.itm}
load net {fsm_output#1(4)} -pin  "nor#1" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#13.itm}
load net {nor#1.itm} -pin  "nor#1" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/nor#1.itm}
load inst "mux#5" "mux(2,6)" "INTERFACE" -attr xrf 2689 -attr oid 78 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5} -attr area 5.517538 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_mux(6,1,2)"
load net {if:for:i#1.sva#2(0)} -pin  "mux#5" {A0(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(1)} -pin  "mux#5" {A0(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(2)} -pin  "mux#5" {A0(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(3)} -pin  "mux#5" {A0(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(4)} -pin  "mux#5" {A0(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(5)} -pin  "mux#5" {A0(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {z.out(0)} -pin  "mux#5" {A1(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3).itm}
load net {z.out(1)} -pin  "mux#5" {A1(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3).itm}
load net {z.out(2)} -pin  "mux#5" {A1(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3).itm}
load net {z.out(3)} -pin  "mux#5" {A1(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3).itm}
load net {z.out(4)} -pin  "mux#5" {A1(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3).itm}
load net {z.out(5)} -pin  "mux#5" {A1(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:i#1.sva#3).itm}
load net {nor#1.itm} -pin  "mux#5" {S(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/nor#1.itm}
load net {mux#5.itm(0)} -pin  "mux#5" {Z(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5.itm}
load net {mux#5.itm(1)} -pin  "mux#5" {Z(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5.itm}
load net {mux#5.itm(2)} -pin  "mux#5" {Z(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5.itm}
load net {mux#5.itm(3)} -pin  "mux#5" {Z(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5.itm}
load net {mux#5.itm(4)} -pin  "mux#5" {Z(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5.itm}
load net {mux#5.itm(5)} -pin  "mux#5" {Z(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5.itm}
load inst "not" "not(1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/not} -attr area 0.001000 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_not(1)"
load net {fsm_output#1(1)} -pin  "not" {A(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#1.itm}
load net {not.itm} -pin  "not" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not.itm}
load inst "and#21" "and(2,6)" "INTERFACE" -attr xrf 2690 -attr oid 79 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21} -attr area 4.379994 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(6,2)"
load net {mux#5.itm(0)} -pin  "and#21" {A0(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5.itm}
load net {mux#5.itm(1)} -pin  "and#21" {A0(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5.itm}
load net {mux#5.itm(2)} -pin  "and#21" {A0(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5.itm}
load net {mux#5.itm(3)} -pin  "and#21" {A0(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5.itm}
load net {mux#5.itm(4)} -pin  "and#21" {A0(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5.itm}
load net {mux#5.itm(5)} -pin  "and#21" {A0(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#5.itm}
load net {not.itm} -pin  "and#21" {A1(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#2.itm}
load net {not.itm} -pin  "and#21" {A1(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#2.itm}
load net {not.itm} -pin  "and#21" {A1(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#2.itm}
load net {not.itm} -pin  "and#21" {A1(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#2.itm}
load net {not.itm} -pin  "and#21" {A1(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#2.itm}
load net {not.itm} -pin  "and#21" {A1(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#2.itm}
load net {and#21.itm(0)} -pin  "and#21" {Z(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21.itm}
load net {and#21.itm(1)} -pin  "and#21" {Z(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21.itm}
load net {and#21.itm(2)} -pin  "and#21" {Z(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21.itm}
load net {and#21.itm(3)} -pin  "and#21" {Z(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21.itm}
load net {and#21.itm(4)} -pin  "and#21" {Z(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21.itm}
load net {and#21.itm(5)} -pin  "and#21" {Z(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21.itm}
load inst "reg(if:for:i#1.sva#2)" "reg(6,1,0,0,1)" "INTERFACE" -attr xrf 2691 -attr oid 80 -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/reg(if:for:i#1.sva#2)}
load net {and#21.itm(0)} -pin  "reg(if:for:i#1.sva#2)" {D(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21.itm}
load net {and#21.itm(1)} -pin  "reg(if:for:i#1.sva#2)" {D(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21.itm}
load net {and#21.itm(2)} -pin  "reg(if:for:i#1.sva#2)" {D(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21.itm}
load net {and#21.itm(3)} -pin  "reg(if:for:i#1.sva#2)" {D(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21.itm}
load net {and#21.itm(4)} -pin  "reg(if:for:i#1.sva#2)" {D(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21.itm}
load net {and#21.itm(5)} -pin  "reg(if:for:i#1.sva#2)" {D(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#21.itm}
load net {GND} -pin  "reg(if:for:i#1.sva#2)" {DRs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(if:for:i#1.sva#2)" {DRs(1)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(if:for:i#1.sva#2)" {DRs(2)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(if:for:i#1.sva#2)" {DRs(3)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(if:for:i#1.sva#2)" {DRs(4)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(if:for:i#1.sva#2)" {DRs(5)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {clk} -pin  "reg(if:for:i#1.sva#2)" {clk} -attr xrf 2692 -attr oid 81 -attr @path {/MazeArrayTester/MazeArrayTester:core/clk}
load net {rst} -pin  "reg(if:for:i#1.sva#2)" {Rs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/rst}
load net {if:for:i#1.sva#2(0)} -pin  "reg(if:for:i#1.sva#2)" {Z(0)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(1)} -pin  "reg(if:for:i#1.sva#2)" {Z(1)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(2)} -pin  "reg(if:for:i#1.sva#2)" {Z(2)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(3)} -pin  "reg(if:for:i#1.sva#2)" {Z(3)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(4)} -pin  "reg(if:for:i#1.sva#2)" {Z(4)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(5)} -pin  "reg(if:for:i#1.sva#2)" {Z(5)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load inst "and#22" "and(2,6)" "INTERFACE" -attr xrf 2693 -attr oid 82 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22} -attr area 4.379994 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(6,2)"
load net {if:for:for:j#1.sva#1(0)} -pin  "and#22" {A0(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#6.itm}
load net {if:for:for:j#1.sva#1(1)} -pin  "and#22" {A0(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#6.itm}
load net {if:for:for:j#1.sva#1(2)} -pin  "and#22" {A0(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#6.itm}
load net {if:for:for:j#1.sva#1(3)} -pin  "and#22" {A0(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#6.itm}
load net {if:for:for:j#1.sva#1(4)} -pin  "and#22" {A0(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#6.itm}
load net {if:for:for:j#1.sva#1(5)} -pin  "and#22" {A0(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:for:j#1.sva#1)#6.itm}
load net {fsm_output#1(3)} -pin  "and#22" {A1(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#3.itm}
load net {fsm_output#1(3)} -pin  "and#22" {A1(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#3.itm}
load net {fsm_output#1(3)} -pin  "and#22" {A1(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#3.itm}
load net {fsm_output#1(3)} -pin  "and#22" {A1(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#3.itm}
load net {fsm_output#1(3)} -pin  "and#22" {A1(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#3.itm}
load net {fsm_output#1(3)} -pin  "and#22" {A1(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/exs#3.itm}
load net {and#22.itm(0)} -pin  "and#22" {Z(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22.itm}
load net {and#22.itm(1)} -pin  "and#22" {Z(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22.itm}
load net {and#22.itm(2)} -pin  "and#22" {Z(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22.itm}
load net {and#22.itm(3)} -pin  "and#22" {Z(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22.itm}
load net {and#22.itm(4)} -pin  "and#22" {Z(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22.itm}
load net {and#22.itm(5)} -pin  "and#22" {Z(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22.itm}
load inst "reg(if:for:for:j#1.sva#2)" "reg(6,1,0,0,1)" "INTERFACE" -attr xrf 2694 -attr oid 83 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/reg(if:for:for:j#1.sva#2)}
load net {and#22.itm(0)} -pin  "reg(if:for:for:j#1.sva#2)" {D(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22.itm}
load net {and#22.itm(1)} -pin  "reg(if:for:for:j#1.sva#2)" {D(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22.itm}
load net {and#22.itm(2)} -pin  "reg(if:for:for:j#1.sva#2)" {D(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22.itm}
load net {and#22.itm(3)} -pin  "reg(if:for:for:j#1.sva#2)" {D(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22.itm}
load net {and#22.itm(4)} -pin  "reg(if:for:for:j#1.sva#2)" {D(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22.itm}
load net {and#22.itm(5)} -pin  "reg(if:for:for:j#1.sva#2)" {D(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/and#22.itm}
load net {GND} -pin  "reg(if:for:for:j#1.sva#2)" {DRs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(if:for:for:j#1.sva#2)" {DRs(1)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(if:for:for:j#1.sva#2)" {DRs(2)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(if:for:for:j#1.sva#2)" {DRs(3)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(if:for:for:j#1.sva#2)" {DRs(4)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {GND} -pin  "reg(if:for:for:j#1.sva#2)" {DRs(5)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_32#6}
load net {clk} -pin  "reg(if:for:for:j#1.sva#2)" {clk} -attr xrf 2695 -attr oid 84 -attr @path {/MazeArrayTester/MazeArrayTester:core/clk}
load net {rst} -pin  "reg(if:for:for:j#1.sva#2)" {Rs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/rst}
load net {if:for:for:j#1.sva#2(0)} -pin  "reg(if:for:for:j#1.sva#2)" {Z(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#2}
load net {if:for:for:j#1.sva#2(1)} -pin  "reg(if:for:for:j#1.sva#2)" {Z(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#2}
load net {if:for:for:j#1.sva#2(2)} -pin  "reg(if:for:for:j#1.sva#2)" {Z(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#2}
load net {if:for:for:j#1.sva#2(3)} -pin  "reg(if:for:for:j#1.sva#2)" {Z(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#2}
load net {if:for:for:j#1.sva#2(4)} -pin  "reg(if:for:for:j#1.sva#2)" {Z(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#2}
load net {if:for:for:j#1.sva#2(5)} -pin  "reg(if:for:for:j#1.sva#2)" {Z(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#2}
load inst "reg(if:for:for:j#1.sva#1)" "reg(7,1,0,0,1)" "INTERFACE" -attr xrf 2696 -attr oid 85 -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/reg(if:for:for:j#1.sva#1)}
load net {z.out(0)} -pin  "reg(if:for:for:j#1.sva#1)" {D(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {z.out(1)} -pin  "reg(if:for:for:j#1.sva#1)" {D(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {z.out(2)} -pin  "reg(if:for:for:j#1.sva#1)" {D(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {z.out(3)} -pin  "reg(if:for:for:j#1.sva#1)" {D(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {z.out(4)} -pin  "reg(if:for:for:j#1.sva#1)" {D(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {z.out(5)} -pin  "reg(if:for:for:j#1.sva#1)" {D(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {z.out(6)} -pin  "reg(if:for:for:j#1.sva#1)" {D(6)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/z.out}
load net {GND} -pin  "reg(if:for:for:j#1.sva#1)" {DRs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_7}
load net {GND} -pin  "reg(if:for:for:j#1.sva#1)" {DRs(1)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_7}
load net {GND} -pin  "reg(if:for:for:j#1.sva#1)" {DRs(2)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_7}
load net {GND} -pin  "reg(if:for:for:j#1.sva#1)" {DRs(3)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_7}
load net {GND} -pin  "reg(if:for:for:j#1.sva#1)" {DRs(4)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_7}
load net {GND} -pin  "reg(if:for:for:j#1.sva#1)" {DRs(5)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_7}
load net {GND} -pin  "reg(if:for:for:j#1.sva#1)" {DRs(6)} -attr @path {/MazeArrayTester/MazeArrayTester:core/C0_7}
load net {clk} -pin  "reg(if:for:for:j#1.sva#1)" {clk} -attr xrf 2697 -attr oid 86 -attr @path {/MazeArrayTester/MazeArrayTester:core/clk}
load net {rst} -pin  "reg(if:for:for:j#1.sva#1)" {Rs(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/rst}
load net {if:for:for:j#1.sva#1(0)} -pin  "reg(if:for:for:j#1.sva#1)" {Z(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#1}
load net {if:for:for:j#1.sva#1(1)} -pin  "reg(if:for:for:j#1.sva#1)" {Z(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#1}
load net {if:for:for:j#1.sva#1(2)} -pin  "reg(if:for:for:j#1.sva#1)" {Z(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#1}
load net {if:for:for:j#1.sva#1(3)} -pin  "reg(if:for:for:j#1.sva#1)" {Z(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#1}
load net {if:for:for:j#1.sva#1(4)} -pin  "reg(if:for:for:j#1.sva#1)" {Z(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#1}
load net {if:for:for:j#1.sva#1(5)} -pin  "reg(if:for:for:j#1.sva#1)" {Z(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#1}
load net {if:for:for:j#1.sva#1(6)} -pin  "reg(if:for:for:j#1.sva#1)" {Z(6)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#1}
load inst "not#4" "not(1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/not#4} -attr area 0.001000 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_not(1)"
load net {z.out(6)} -pin  "not#4" {A(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(if:for:acc#1.tmp)#4.itm}
load net {not#4.itm} -pin  "not#4" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not#4.itm}
load inst "and#4" "and(2,1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/and#4} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(1,2)"
load net {fsm_output#1(4)} -pin  "and#4" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#14.itm}
load net {not#4.itm} -pin  "and#4" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not#4.itm}
load net {and.dcpl#4} -pin  "and#4" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/and.dcpl#4}
load inst "not#7" "not(1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/not#7} -attr area 0.001000 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_not(1)"
load net {written.sva} -pin  "not#7" {A(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/written.sva}
load net {not#7.itm} -pin  "not#7" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not#7.itm}
load inst "and#5" "and(2,1)" "INTERFACE" -attr @path {/MazeArrayTester/MazeArrayTester:core/and#5} -attr area 0.730832 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_and(1,2)"
load net {not#7.itm} -pin  "and#5" {A0(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/not#7.itm}
load net {fsm_output#1(1)} -pin  "and#5" {A1(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#8.itm}
load net {and.dcpl#5} -pin  "and#5" {Z(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/and.dcpl#5}
load inst "mux#4" "mux(2,6)" "INTERFACE" -attr xrf 2698 -attr oid 87 -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4} -attr area 5.517538 -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_Altera-Cyclone-III-6_beh_psr.mgc_mux(6,1,2)"
load net {if:for:i#1.sva#2(0)} -pin  "mux#4" {A0(0)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(1)} -pin  "mux#4" {A0(1)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(2)} -pin  "mux#4" {A0(2)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(3)} -pin  "mux#4" {A0(3)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(4)} -pin  "mux#4" {A0(4)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:i#1.sva#2(5)} -pin  "mux#4" {A0(5)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:i#1.sva#2}
load net {if:for:for:j#1.sva#2(0)} -pin  "mux#4" {A1(0)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#2}
load net {if:for:for:j#1.sva#2(1)} -pin  "mux#4" {A1(1)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#2}
load net {if:for:for:j#1.sva#2(2)} -pin  "mux#4" {A1(2)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#2}
load net {if:for:for:j#1.sva#2(3)} -pin  "mux#4" {A1(3)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#2}
load net {if:for:for:j#1.sva#2(4)} -pin  "mux#4" {A1(4)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#2}
load net {if:for:for:j#1.sva#2(5)} -pin  "mux#4" {A1(5)} -attr vt d -attr @path {/MazeArrayTester/MazeArrayTester:core/if:for:for:j#1.sva#2}
load net {fsm_output#1(4)} -pin  "mux#4" {S(0)} -attr @path {/MazeArrayTester/MazeArrayTester:core/slc(fsm_output)#17.itm}
load net {mux#4.itm(0)} -pin  "mux#4" {Z(0)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4.itm}
load net {mux#4.itm(1)} -pin  "mux#4" {Z(1)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4.itm}
load net {mux#4.itm(2)} -pin  "mux#4" {Z(2)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4.itm}
load net {mux#4.itm(3)} -pin  "mux#4" {Z(3)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4.itm}
load net {mux#4.itm(4)} -pin  "mux#4" {Z(4)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4.itm}
load net {mux#4.itm(5)} -pin  "mux#4" {Z(5)} -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core/mux#4.itm}
### END MODULE 

module new "MazeArrayTester" "orig"
load portBus {row:rsc.z(5:0)} output 6 {row:rsc.z(5)} {row:rsc.z(4)} {row:rsc.z(3)} {row:rsc.z(2)} {row:rsc.z(1)} {row:rsc.z(0)} -attr xrf 2699 -attr oid 88 -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load portBus {col:rsc.z(5:0)} output 6 {col:rsc.z(5)} {col:rsc.z(4)} {col:rsc.z(3)} {col:rsc.z(2)} {col:rsc.z(1)} {col:rsc.z(0)} -attr xrf 2700 -attr oid 89 -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load portBus {out:rsc.z(3:0)} output 4 {out:rsc.z(3)} {out:rsc.z(2)} {out:rsc.z(1)} {out:rsc.z(0)} -attr xrf 2701 -attr oid 90 -attr vt d -attr @path {/MazeArrayTester/out:rsc.z}
load port {write:rsc.z} output -attr xrf 2702 -attr oid 91 -attr vt d -attr @path {/MazeArrayTester/write:rsc.z}
load port {clk} input -attr xrf 2703 -attr oid 92 -attr vt d -attr @path {/MazeArrayTester/clk}
load port {rst} input -attr xrf 2704 -attr oid 93 -attr vt d -attr @path {/MazeArrayTester/rst}
load symbol "mgc_ioport.mgc_out_stdreg(1,6)" "INTERFACE" GEN boxcolor 0 \
     portBus {d(5:0)} input 6 {d(5)} {d(4)} {d(3)} {d(2)} {d(1)} {d(0)} \
     portBus {z(5:0)} output 6 {z(5)} {z(4)} {z(3)} {z(2)} {z(1)} {z(0)} \

load symbol "mgc_ioport.mgc_out_stdreg(2,6)" "INTERFACE" GEN boxcolor 0 \
     portBus {d(5:0)} input 6 {d(5)} {d(4)} {d(3)} {d(2)} {d(1)} {d(0)} \
     portBus {z(5:0)} output 6 {z(5)} {z(4)} {z(3)} {z(2)} {z(1)} {z(0)} \

load symbol "mgc_ioport.mgc_out_stdreg(3,4)" "INTERFACE" GEN boxcolor 0 \
     portBus {d(3:0)} input 4 {d(3)} {d(2)} {d(1)} {d(0)} \
     portBus {z(3:0)} output 4 {z(3)} {z(2)} {z(1)} {z(0)} \

load symbol "mgc_ioport.mgc_out_stdreg(4,1)" "INTERFACE" GEN boxcolor 0 \
     portBus {d(0:0)} input 1 {d(0)} \
     portBus {z(0:0)} output 1 {z(0)} \

load symbol "MazeArrayTester:core" "orig" GEN \
     port {clk#1} input \
     port {rst#1} input \
     portBus {row:rsc:mgc_out_stdreg.d(5:0)} output 6 {row:rsc:mgc_out_stdreg.d(5)} {row:rsc:mgc_out_stdreg.d(4)} {row:rsc:mgc_out_stdreg.d(3)} {row:rsc:mgc_out_stdreg.d(2)} {row:rsc:mgc_out_stdreg.d(1)} {row:rsc:mgc_out_stdreg.d(0)} \
     portBus {col:rsc:mgc_out_stdreg.d(5:0)} output 6 {col:rsc:mgc_out_stdreg.d(5)} {col:rsc:mgc_out_stdreg.d(4)} {col:rsc:mgc_out_stdreg.d(3)} {col:rsc:mgc_out_stdreg.d(2)} {col:rsc:mgc_out_stdreg.d(1)} {col:rsc:mgc_out_stdreg.d(0)} \
     portBus {out:rsc:mgc_out_stdreg.d(3:0)} output 4 {out:rsc:mgc_out_stdreg.d(3)} {out:rsc:mgc_out_stdreg.d(2)} {out:rsc:mgc_out_stdreg.d(1)} {out:rsc:mgc_out_stdreg.d(0)} \
     port {write:rsc:mgc_out_stdreg.d} output \

load net {row:rsc:mgc_out_stdreg.d#1(0)} -attr vt d
load net {row:rsc:mgc_out_stdreg.d#1(1)} -attr vt d
load net {row:rsc:mgc_out_stdreg.d#1(2)} -attr vt d
load net {row:rsc:mgc_out_stdreg.d#1(3)} -attr vt d
load net {row:rsc:mgc_out_stdreg.d#1(4)} -attr vt d
load net {row:rsc:mgc_out_stdreg.d#1(5)} -attr vt d
load netBundle {row:rsc:mgc_out_stdreg.d#1} 6 {row:rsc:mgc_out_stdreg.d#1(0)} {row:rsc:mgc_out_stdreg.d#1(1)} {row:rsc:mgc_out_stdreg.d#1(2)} {row:rsc:mgc_out_stdreg.d#1(3)} {row:rsc:mgc_out_stdreg.d#1(4)} {row:rsc:mgc_out_stdreg.d#1(5)} -attr xrf 2705 -attr oid 94 -attr vt d -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d#1(0)} -attr vt d
load net {col:rsc:mgc_out_stdreg.d#1(1)} -attr vt d
load net {col:rsc:mgc_out_stdreg.d#1(2)} -attr vt d
load net {col:rsc:mgc_out_stdreg.d#1(3)} -attr vt d
load net {col:rsc:mgc_out_stdreg.d#1(4)} -attr vt d
load net {col:rsc:mgc_out_stdreg.d#1(5)} -attr vt d
load netBundle {col:rsc:mgc_out_stdreg.d#1} 6 {col:rsc:mgc_out_stdreg.d#1(0)} {col:rsc:mgc_out_stdreg.d#1(1)} {col:rsc:mgc_out_stdreg.d#1(2)} {col:rsc:mgc_out_stdreg.d#1(3)} {col:rsc:mgc_out_stdreg.d#1(4)} {col:rsc:mgc_out_stdreg.d#1(5)} -attr xrf 2706 -attr oid 95 -attr vt d -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d#1(0)} -attr vt d
load net {out:rsc:mgc_out_stdreg.d#1(1)} -attr vt d
load net {out:rsc:mgc_out_stdreg.d#1(2)} -attr vt d
load net {out:rsc:mgc_out_stdreg.d#1(3)} -attr vt d
load netBundle {out:rsc:mgc_out_stdreg.d#1} 4 {out:rsc:mgc_out_stdreg.d#1(0)} {out:rsc:mgc_out_stdreg.d#1(1)} {out:rsc:mgc_out_stdreg.d#1(2)} {out:rsc:mgc_out_stdreg.d#1(3)} -attr xrf 2707 -attr oid 96 -attr vt d -attr @path {/MazeArrayTester/out:rsc:mgc_out_stdreg.d}
load net {write:rsc:mgc_out_stdreg.d#1} -attr xrf 2708 -attr oid 97 -attr vt d
load net {row:rsc.z(0)} -attr vt d
load net {row:rsc.z(1)} -attr vt d
load net {row:rsc.z(2)} -attr vt d
load net {row:rsc.z(3)} -attr vt d
load net {row:rsc.z(4)} -attr vt d
load net {row:rsc.z(5)} -attr vt d
load netBundle {row:rsc.z} 6 {row:rsc.z(0)} {row:rsc.z(1)} {row:rsc.z(2)} {row:rsc.z(3)} {row:rsc.z(4)} {row:rsc.z(5)} -attr xrf 2709 -attr oid 98 -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load net {row:rsc.z(0)} -port {row:rsc.z(0)} -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load net {row:rsc.z(1)} -port {row:rsc.z(1)} -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load net {row:rsc.z(2)} -port {row:rsc.z(2)} -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load net {row:rsc.z(3)} -port {row:rsc.z(3)} -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load net {row:rsc.z(4)} -port {row:rsc.z(4)} -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load net {row:rsc.z(5)} -port {row:rsc.z(5)} -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load net {col:rsc.z(0)} -attr vt d
load net {col:rsc.z(1)} -attr vt d
load net {col:rsc.z(2)} -attr vt d
load net {col:rsc.z(3)} -attr vt d
load net {col:rsc.z(4)} -attr vt d
load net {col:rsc.z(5)} -attr vt d
load netBundle {col:rsc.z} 6 {col:rsc.z(0)} {col:rsc.z(1)} {col:rsc.z(2)} {col:rsc.z(3)} {col:rsc.z(4)} {col:rsc.z(5)} -attr xrf 2710 -attr oid 99 -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load net {col:rsc.z(0)} -port {col:rsc.z(0)} -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load net {col:rsc.z(1)} -port {col:rsc.z(1)} -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load net {col:rsc.z(2)} -port {col:rsc.z(2)} -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load net {col:rsc.z(3)} -port {col:rsc.z(3)} -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load net {col:rsc.z(4)} -port {col:rsc.z(4)} -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load net {col:rsc.z(5)} -port {col:rsc.z(5)} -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load net {out:rsc.z(0)} -attr vt d
load net {out:rsc.z(1)} -attr vt d
load net {out:rsc.z(2)} -attr vt d
load net {out:rsc.z(3)} -attr vt d
load netBundle {out:rsc.z} 4 {out:rsc.z(0)} {out:rsc.z(1)} {out:rsc.z(2)} {out:rsc.z(3)} -attr xrf 2711 -attr oid 100 -attr vt d -attr @path {/MazeArrayTester/out:rsc.z}
load net {out:rsc.z(0)} -port {out:rsc.z(0)} -attr vt d -attr @path {/MazeArrayTester/out:rsc.z}
load net {out:rsc.z(1)} -port {out:rsc.z(1)} -attr vt d -attr @path {/MazeArrayTester/out:rsc.z}
load net {out:rsc.z(2)} -port {out:rsc.z(2)} -attr vt d -attr @path {/MazeArrayTester/out:rsc.z}
load net {out:rsc.z(3)} -port {out:rsc.z(3)} -attr vt d -attr @path {/MazeArrayTester/out:rsc.z}
load net {write:rsc.z} -attr xrf 2712 -attr oid 101 -attr vt d
load net {write:rsc.z} -port {write:rsc.z} -attr xrf 2713 -attr oid 102 -attr vt d -attr @path {/MazeArrayTester/write:rsc.z}
load net {clk} -attr xrf 2714 -attr oid 103
load net {clk} -port {clk} -attr xrf 2715 -attr oid 104
load net {rst} -attr xrf 2716 -attr oid 105
load net {rst} -port {rst} -attr xrf 2717 -attr oid 106
load inst "MazeArrayTester:core:inst" "MazeArrayTester:core" "orig" -attr xrf 2718 -attr oid 107 -attr vt dc -attr @path {/MazeArrayTester/MazeArrayTester:core:inst} -attr area 81.495288 -attr delay 2.953303 -attr hier "/MazeArrayTester/MazeArrayTester:core" -pg 1 -lvl 5
load net {clk} -pin  "MazeArrayTester:core:inst" {clk#1} -attr xrf 2719 -attr oid 108 -attr @path {/MazeArrayTester/clk}
load net {rst} -pin  "MazeArrayTester:core:inst" {rst#1} -attr xrf 2720 -attr oid 109 -attr @path {/MazeArrayTester/rst}
load net {row:rsc:mgc_out_stdreg.d#1(0)} -pin  "MazeArrayTester:core:inst" {row:rsc:mgc_out_stdreg.d(0)} -attr vt dc -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d#1(1)} -pin  "MazeArrayTester:core:inst" {row:rsc:mgc_out_stdreg.d(1)} -attr vt dc -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d#1(2)} -pin  "MazeArrayTester:core:inst" {row:rsc:mgc_out_stdreg.d(2)} -attr vt dc -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d#1(3)} -pin  "MazeArrayTester:core:inst" {row:rsc:mgc_out_stdreg.d(3)} -attr vt dc -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d#1(4)} -pin  "MazeArrayTester:core:inst" {row:rsc:mgc_out_stdreg.d(4)} -attr vt dc -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d#1(5)} -pin  "MazeArrayTester:core:inst" {row:rsc:mgc_out_stdreg.d(5)} -attr vt dc -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d#1(0)} -pin  "MazeArrayTester:core:inst" {col:rsc:mgc_out_stdreg.d(0)} -attr vt dc -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d#1(1)} -pin  "MazeArrayTester:core:inst" {col:rsc:mgc_out_stdreg.d(1)} -attr vt dc -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d#1(2)} -pin  "MazeArrayTester:core:inst" {col:rsc:mgc_out_stdreg.d(2)} -attr vt dc -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d#1(3)} -pin  "MazeArrayTester:core:inst" {col:rsc:mgc_out_stdreg.d(3)} -attr vt dc -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d#1(4)} -pin  "MazeArrayTester:core:inst" {col:rsc:mgc_out_stdreg.d(4)} -attr vt dc -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d#1(5)} -pin  "MazeArrayTester:core:inst" {col:rsc:mgc_out_stdreg.d(5)} -attr vt dc -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d#1(0)} -pin  "MazeArrayTester:core:inst" {out:rsc:mgc_out_stdreg.d(0)} -attr vt dc -attr @path {/MazeArrayTester/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d#1(1)} -pin  "MazeArrayTester:core:inst" {out:rsc:mgc_out_stdreg.d(1)} -attr vt dc -attr @path {/MazeArrayTester/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d#1(2)} -pin  "MazeArrayTester:core:inst" {out:rsc:mgc_out_stdreg.d(2)} -attr vt dc -attr @path {/MazeArrayTester/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d#1(3)} -pin  "MazeArrayTester:core:inst" {out:rsc:mgc_out_stdreg.d(3)} -attr vt dc -attr @path {/MazeArrayTester/out:rsc:mgc_out_stdreg.d}
load net {write:rsc:mgc_out_stdreg.d#1} -pin  "MazeArrayTester:core:inst" {write:rsc:mgc_out_stdreg.d} -attr xrf 2721 -attr oid 110 -attr vt dc -attr @path {/MazeArrayTester/write:rsc:mgc_out_stdreg.d}
load inst "row:rsc:mgc_out_stdreg" "mgc_ioport.mgc_out_stdreg(1,6)" "INTERFACE" -attr xrf 2722 -attr oid 111 -attr vt d -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg} -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_ioport.mgc_out_stdreg(1,6)" -pg 1 -lvl 1002
load net {row:rsc:mgc_out_stdreg.d#1(0)} -pin  "row:rsc:mgc_out_stdreg" {d(0)} -attr vt d -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d#1(1)} -pin  "row:rsc:mgc_out_stdreg" {d(1)} -attr vt d -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d#1(2)} -pin  "row:rsc:mgc_out_stdreg" {d(2)} -attr vt d -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d#1(3)} -pin  "row:rsc:mgc_out_stdreg" {d(3)} -attr vt d -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d#1(4)} -pin  "row:rsc:mgc_out_stdreg" {d(4)} -attr vt d -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg.d}
load net {row:rsc:mgc_out_stdreg.d#1(5)} -pin  "row:rsc:mgc_out_stdreg" {d(5)} -attr vt d -attr @path {/MazeArrayTester/row:rsc:mgc_out_stdreg.d}
load net {row:rsc.z(0)} -pin  "row:rsc:mgc_out_stdreg" {z(0)} -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load net {row:rsc.z(1)} -pin  "row:rsc:mgc_out_stdreg" {z(1)} -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load net {row:rsc.z(2)} -pin  "row:rsc:mgc_out_stdreg" {z(2)} -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load net {row:rsc.z(3)} -pin  "row:rsc:mgc_out_stdreg" {z(3)} -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load net {row:rsc.z(4)} -pin  "row:rsc:mgc_out_stdreg" {z(4)} -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load net {row:rsc.z(5)} -pin  "row:rsc:mgc_out_stdreg" {z(5)} -attr vt d -attr @path {/MazeArrayTester/row:rsc.z}
load inst "col:rsc:mgc_out_stdreg" "mgc_ioport.mgc_out_stdreg(2,6)" "INTERFACE" -attr xrf 2723 -attr oid 112 -attr vt d -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg} -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_ioport.mgc_out_stdreg(2,6)" -pg 1 -lvl 1002
load net {col:rsc:mgc_out_stdreg.d#1(0)} -pin  "col:rsc:mgc_out_stdreg" {d(0)} -attr vt d -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d#1(1)} -pin  "col:rsc:mgc_out_stdreg" {d(1)} -attr vt d -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d#1(2)} -pin  "col:rsc:mgc_out_stdreg" {d(2)} -attr vt d -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d#1(3)} -pin  "col:rsc:mgc_out_stdreg" {d(3)} -attr vt d -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d#1(4)} -pin  "col:rsc:mgc_out_stdreg" {d(4)} -attr vt d -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg.d}
load net {col:rsc:mgc_out_stdreg.d#1(5)} -pin  "col:rsc:mgc_out_stdreg" {d(5)} -attr vt d -attr @path {/MazeArrayTester/col:rsc:mgc_out_stdreg.d}
load net {col:rsc.z(0)} -pin  "col:rsc:mgc_out_stdreg" {z(0)} -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load net {col:rsc.z(1)} -pin  "col:rsc:mgc_out_stdreg" {z(1)} -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load net {col:rsc.z(2)} -pin  "col:rsc:mgc_out_stdreg" {z(2)} -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load net {col:rsc.z(3)} -pin  "col:rsc:mgc_out_stdreg" {z(3)} -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load net {col:rsc.z(4)} -pin  "col:rsc:mgc_out_stdreg" {z(4)} -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load net {col:rsc.z(5)} -pin  "col:rsc:mgc_out_stdreg" {z(5)} -attr vt d -attr @path {/MazeArrayTester/col:rsc.z}
load inst "out:rsc:mgc_out_stdreg" "mgc_ioport.mgc_out_stdreg(3,4)" "INTERFACE" -attr xrf 2724 -attr oid 113 -attr vt d -attr @path {/MazeArrayTester/out:rsc:mgc_out_stdreg} -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_ioport.mgc_out_stdreg(3,4)" -pg 1 -lvl 1002
load net {out:rsc:mgc_out_stdreg.d#1(0)} -pin  "out:rsc:mgc_out_stdreg" {d(0)} -attr vt d -attr @path {/MazeArrayTester/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d#1(1)} -pin  "out:rsc:mgc_out_stdreg" {d(1)} -attr vt d -attr @path {/MazeArrayTester/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d#1(2)} -pin  "out:rsc:mgc_out_stdreg" {d(2)} -attr vt d -attr @path {/MazeArrayTester/out:rsc:mgc_out_stdreg.d}
load net {out:rsc:mgc_out_stdreg.d#1(3)} -pin  "out:rsc:mgc_out_stdreg" {d(3)} -attr vt d -attr @path {/MazeArrayTester/out:rsc:mgc_out_stdreg.d}
load net {out:rsc.z(0)} -pin  "out:rsc:mgc_out_stdreg" {z(0)} -attr vt d -attr @path {/MazeArrayTester/out:rsc.z}
load net {out:rsc.z(1)} -pin  "out:rsc:mgc_out_stdreg" {z(1)} -attr vt d -attr @path {/MazeArrayTester/out:rsc.z}
load net {out:rsc.z(2)} -pin  "out:rsc:mgc_out_stdreg" {z(2)} -attr vt d -attr @path {/MazeArrayTester/out:rsc.z}
load net {out:rsc.z(3)} -pin  "out:rsc:mgc_out_stdreg" {z(3)} -attr vt d -attr @path {/MazeArrayTester/out:rsc.z}
load inst "write:rsc:mgc_out_stdreg" "mgc_ioport.mgc_out_stdreg(4,1)" "INTERFACE" -attr xrf 2725 -attr oid 114 -attr vt d -attr @path {/MazeArrayTester/write:rsc:mgc_out_stdreg} -attr delay -1000000000000000000000000000000.000000 -attr qmod "mgc_ioport.mgc_out_stdreg(4,1)" -pg 1 -lvl 1002
load net {write:rsc:mgc_out_stdreg.d#1} -pin  "write:rsc:mgc_out_stdreg" {d(0)} -attr vt d -attr @path {/MazeArrayTester/write:rsc:mgc_out_stdreg.d}
load net {write:rsc.z} -pin  "write:rsc:mgc_out_stdreg" {z(0)} -attr vt d -attr @path {/MazeArrayTester/write:rsc.z}
### END MODULE 

