Game Engine Block Pseudo Code:

Maze[ROW][COL];
PlayerROW;
PlayerCOL;
EndGame = false;

Move(PlayerMove, Player_Error){

    if(!EndGame){
        if(!Player_Error){ #if there isn't a physical error
            potential_row_move = 1;
            potential_col_move = 1;
            if(PlayerMove == UP){
                potential_col_move = 0;
                if(Maze[PlayerROW-1][PlayerCOL] == P2){
                    potential_row_move = -2;
                }
            }elseif(PlayerMove == DOWN){
                potential_col_move = 0;
                if(Maze[PlayerROW+1][PlayerCOL] == P2){
                    potential_row_move = 2;
                }
            }elseif(PlayerMove == LEFT){
                potential_row_move = 0;
                if(Maze[PlayerROW][PlayerCOL-1] == P2){
                    potential_col_move = -2;
                }
            }elseif(PlayerMove == RIGHT){
                potential_row_move = 0;
                if(Maze[PlayerROW][PlayerCOL+1] == P2){
                    potential_col_move = 2;
                }
            }

            if (Maze[PlayerROW + potential_row_move][PlayerCOL + potential_col_move] != WALL){
                if(Maze[PlayerROW + potential_row_move][PlayerCOL + potential_col_move] == END_POINT){
                    EndGame = true;
                }
                Maze[PlayerROW + potential_row_move][PlayerCOL + potential_col_move] = Maze[PlayerROW][PlayerCOL];
                Maze[PlayerROW][PlayerCOL] = EMPTY_CELL;
            }
        }
    }

    return MAZE;
}

Initialize(){
    PlayerROW = RandomRow;
    PlayerCOL = RandomCol;
    Maze = GenerateMaze();
    EndGame = false;
}
