// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   kjr115@EEWS104A-009
//  Generated date: Tue May 03 15:31:09 2016
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    Render_core
// ------------------------------------------------------------------


module Render_core (
  clk, rst, v_out_rsc_mgc_out_stdreg_d
);
  input clk;
  input rst;
  output [11:0] v_out_rsc_mgc_out_stdreg_d;
  reg [11:0] v_out_rsc_mgc_out_stdreg_d;



  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : core
    // Interconnect Declarations
    reg [20:0] for_i_2_sva;
    reg [20:0] for_i_2_sva_1;
    reg [20:0] for_i_1_sva;
    reg [20:0] for_i_1_sva_1;
    reg main_1_for_slc_itm;
    reg main_2_for_slc_itm;

    begin : mainExit
      forever begin : main
        // C-Step 0 of Loop 'main'
        begin : waitLoop0Exit
          forever begin : waitLoop0
            @(posedge clk);
            if ( rst )
              disable mainExit;
            if ( clk )
              disable waitLoop0Exit;
          end
        end
        // C-Step 1 of Loop 'main'
        for_i_2_sva = 21'b0;
        begin : main_1_forExit
          forever begin : main_1_for
            // C-Step 0 of Loop 'main_1_for'
            begin : waitLoop1Exit
              forever begin : waitLoop1
                @(posedge clk);
                if ( rst )
                  disable mainExit;
                if ( clk )
                  disable waitLoop1Exit;
              end
            end
            // C-Step 1 of Loop 'main_1_for'
            v_out_rsc_mgc_out_stdreg_d <= signext_12_1(readslicef_4_1_3(((for_i_2_sva[20:17])
                + 4'b1011)));
            for_i_2_sva_1 = for_i_2_sva + 21'b1;
            main_1_for_slc_itm = readslicef_4_1_3((conv_u2s_3_4(for_i_2_sva_1[20:18])
                + 4'b1011));
            begin : waitLoop2Exit
              forever begin : waitLoop2
                @(posedge clk);
                if ( rst )
                  disable mainExit;
                if ( clk )
                  disable waitLoop2Exit;
              end
            end
            // C-Step 2 of Loop 'main_1_for'
            if ( ~ main_1_for_slc_itm )
              disable main_1_forExit;
            for_i_2_sva = for_i_2_sva_1;
          end
        end
        for_i_1_sva = 21'b0;
        begin : waitLoop3Exit
          forever begin : waitLoop3
            @(posedge clk);
            if ( rst )
              disable mainExit;
            if ( clk )
              disable waitLoop3Exit;
          end
        end
        // C-Step 2 of Loop 'main'
        begin : main_2_forExit
          forever begin : main_2_for
            // C-Step 0 of Loop 'main_2_for'
            begin : waitLoop4Exit
              forever begin : waitLoop4
                @(posedge clk);
                if ( rst )
                  disable mainExit;
                if ( clk )
                  disable waitLoop4Exit;
              end
            end
            // C-Step 1 of Loop 'main_2_for'
            v_out_rsc_mgc_out_stdreg_d <= signext_12_1(readslicef_4_1_3(((for_i_1_sva[20:17])
                + 4'b1011)));
            for_i_1_sva_1 = for_i_1_sva + 21'b1;
            main_2_for_slc_itm = readslicef_4_1_3((conv_u2s_3_4(for_i_1_sva_1[20:18])
                + 4'b1011));
            begin : waitLoop5Exit
              forever begin : waitLoop5
                @(posedge clk);
                if ( rst )
                  disable mainExit;
                if ( clk )
                  disable waitLoop5Exit;
              end
            end
            // C-Step 2 of Loop 'main_2_for'
            if ( ~ main_2_for_slc_itm )
              disable main_2_forExit;
            for_i_1_sva = for_i_1_sva_1;
          end
        end
      end
    end
    main_2_for_slc_itm = 1'b0;
    main_1_for_slc_itm = 1'b0;
    for_i_1_sva_1 = 21'b0;
    for_i_1_sva = 21'b0;
    for_i_2_sva_1 = 21'b0;
    for_i_2_sva = 21'b0;
    v_out_rsc_mgc_out_stdreg_d <= 12'b0;
  end


  function [0:0] readslicef_4_1_3;
    input [3:0] vector;
    reg [3:0] tmp;
  begin
    tmp = vector >> 3;
    readslicef_4_1_3 = tmp[0:0];
  end
  endfunction


  function [11:0] signext_12_1;
    input [0:0] vector;
  begin
    signext_12_1= {{11{vector[0]}}, vector};
  end
  endfunction


  function signed [3:0] conv_u2s_3_4 ;
    input [2:0]  vector ;
  begin
    conv_u2s_3_4 = {1'b0, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    Render
//  Generated from file(s):
//    2) $PROJECT_HOME/src/Render.cpp
// ------------------------------------------------------------------


module Render (
  v_out_rsc_z, clk, rst
);
  output [11:0] v_out_rsc_z;
  input clk;
  input rst;


  // Interconnect Declarations
  wire [11:0] v_out_rsc_mgc_out_stdreg_d;


  // Interconnect Declarations for Component Instantiations 
  mgc_out_stdreg #(.rscid(1),
  .width(12)) v_out_rsc_mgc_out_stdreg (
      .d(v_out_rsc_mgc_out_stdreg_d),
      .z(v_out_rsc_z)
    );
  Render_core Render_core_inst (
      .clk(clk),
      .rst(rst),
      .v_out_rsc_mgc_out_stdreg_d(v_out_rsc_mgc_out_stdreg_d)
    );
endmodule



