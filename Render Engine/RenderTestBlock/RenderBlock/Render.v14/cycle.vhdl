-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    2011a.126 Production Release
--  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
-- 
--  Generated by:   kjr115@EEWS104A-009
--  Generated date: Tue May 03 14:26:41 2016
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    Render_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.Render_mux_pkg.ALL;


ENTITY Render_core IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    v_out_rsc_mgc_out_stdreg_d : OUT STD_LOGIC_VECTOR (11 DOWNTO 0)
  );
END Render_core;

ARCHITECTURE v14 OF Render_core IS
  -- Default Constants

BEGIN
  -- Default Constant Signal Assignments

  core : PROCESS
    -- Interconnect Declarations
    VARIABLE for_i_2_sva : STD_LOGIC_VECTOR (20 DOWNTO 0);
    VARIABLE for_i_2_sva_1 : STD_LOGIC_VECTOR (20 DOWNTO 0);
    VARIABLE for_i_1_sva : STD_LOGIC_VECTOR (20 DOWNTO 0);
    VARIABLE for_i_1_sva_1 : STD_LOGIC_VECTOR (20 DOWNTO 0);
    VARIABLE main_1_for_slc_itm : STD_LOGIC;
    VARIABLE main_2_for_slc_itm : STD_LOGIC;

  BEGIN
    main : LOOP
      -- C-Step 0 of Loop 'main'
      WAIT UNTIL clk'EVENT AND ( clk = '1' );
      EXIT main WHEN ( rst = '1' );
      -- C-Step 1 of Loop 'main'
      for_i_2_sva := STD_LOGIC_VECTOR'("000000000000000000000");
      main_1_for : LOOP
        -- C-Step 0 of Loop 'main_1_for'
        WAIT UNTIL clk'EVENT AND ( clk = '1' );
        EXIT main WHEN ( rst = '1' );
        -- C-Step 1 of Loop 'main_1_for'
        v_out_rsc_mgc_out_stdreg_d <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(readindex(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(for_i_2_sva(20
            DOWNTO 17)) + SIGNED'("1011"), 4)), 3), 1),12));
        for_i_2_sva_1 := STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_i_2_sva) + CONV_UNSIGNED(CONV_UNSIGNED('1',
            1), 21), 21));
        main_1_for_slc_itm := readindex(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(UNSIGNED(for_i_2_sva_1(20
            DOWNTO 18)), 4) + SIGNED'("1011"), 4)), 3);
        WAIT UNTIL clk'EVENT AND ( clk = '1' );
        EXIT main WHEN ( rst = '1' );
        -- C-Step 2 of Loop 'main_1_for'
        EXIT main_1_for WHEN ( main_1_for_slc_itm = '0' );
        for_i_2_sva := for_i_2_sva_1;
      END LOOP main_1_for;

      for_i_1_sva := STD_LOGIC_VECTOR'("000000000000000000000");
      WAIT UNTIL clk'EVENT AND ( clk = '1' );
      EXIT main WHEN ( rst = '1' );
      -- C-Step 2 of Loop 'main'
      main_2_for : LOOP
        -- C-Step 0 of Loop 'main_2_for'
        WAIT UNTIL clk'EVENT AND ( clk = '1' );
        EXIT main WHEN ( rst = '1' );
        -- C-Step 1 of Loop 'main_2_for'
        v_out_rsc_mgc_out_stdreg_d <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(readindex(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(for_i_1_sva(20
            DOWNTO 17)) + SIGNED'("1011"), 4)), 3), 1),12));
        for_i_1_sva_1 := STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_i_1_sva) + CONV_UNSIGNED(CONV_UNSIGNED('1',
            1), 21), 21));
        main_2_for_slc_itm := readindex(STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(UNSIGNED(for_i_1_sva_1(20
            DOWNTO 18)), 4) + SIGNED'("1011"), 4)), 3);
        WAIT UNTIL clk'EVENT AND ( clk = '1' );
        EXIT main WHEN ( rst = '1' );
        -- C-Step 2 of Loop 'main_2_for'
        EXIT main_2_for WHEN ( main_2_for_slc_itm = '0' );
        for_i_1_sva := for_i_1_sva_1;
      END LOOP main_2_for;

    END LOOP main;

    main_2_for_slc_itm := '0';
    main_1_for_slc_itm := '0';
    for_i_1_sva_1 := STD_LOGIC_VECTOR'("000000000000000000000");
    for_i_1_sva := STD_LOGIC_VECTOR'("000000000000000000000");
    for_i_2_sva_1 := STD_LOGIC_VECTOR'("000000000000000000000");
    for_i_2_sva := STD_LOGIC_VECTOR'("000000000000000000000");
    v_out_rsc_mgc_out_stdreg_d <= STD_LOGIC_VECTOR'("000000000000");
  END PROCESS core;

END v14;

-- ------------------------------------------------------------------
--  Design Unit:    Render
--  Generated from file(s):
--    2) $PROJECT_HOME/src/Render.cpp
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE work.Render_mux_pkg.ALL;


ENTITY Render IS
  PORT(
    v_out_rsc_z : OUT STD_LOGIC_VECTOR (11 DOWNTO 0);
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC
  );
END Render;

ARCHITECTURE v14 OF Render IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL v_out_rsc_mgc_out_stdreg_d : STD_LOGIC_VECTOR (11 DOWNTO 0);

  SIGNAL v_out_rsc_mgc_out_stdreg_d_1 : STD_LOGIC_VECTOR (11 DOWNTO 0);
  SIGNAL v_out_rsc_mgc_out_stdreg_z : STD_LOGIC_VECTOR (11 DOWNTO 0);

  COMPONENT Render_core
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      v_out_rsc_mgc_out_stdreg_d : OUT STD_LOGIC_VECTOR (11 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL Render_core_inst_v_out_rsc_mgc_out_stdreg_d : STD_LOGIC_VECTOR (11 DOWNTO
      0);

BEGIN
  -- Default Constant Signal Assignments

  v_out_rsc_mgc_out_stdreg : mgc_hls.mgc_ioport_comps.mgc_out_stdreg
    GENERIC MAP(
      rscid => 1,
      width => 12
      )
    PORT MAP(
      d => v_out_rsc_mgc_out_stdreg_d_1,
      z => v_out_rsc_mgc_out_stdreg_z
    );
  v_out_rsc_mgc_out_stdreg_d_1 <= v_out_rsc_mgc_out_stdreg_d;
  v_out_rsc_z <= v_out_rsc_mgc_out_stdreg_z;

  Render_core_inst : Render_core
    PORT MAP(
      clk => clk,
      rst => rst,
      v_out_rsc_mgc_out_stdreg_d => Render_core_inst_v_out_rsc_mgc_out_stdreg_d
    );
  v_out_rsc_mgc_out_stdreg_d <= Render_core_inst_v_out_rsc_mgc_out_stdreg_d;

END v14;



