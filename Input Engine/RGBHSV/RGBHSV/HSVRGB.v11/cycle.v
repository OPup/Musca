// ----------------------------------------------------------------------
//  HLS HDL:        Verilog Netlister
//  HLS Version:    2011a.126 Production Release
//  HLS Date:       Wed Aug  8 00:52:07 PDT 2012
// 
//  Generated by:   oh1015@EEWS104A-005
//  Generated date: Thu Apr 28 14:57:00 2016
// ----------------------------------------------------------------------

// 
// ------------------------------------------------------------------
//  Design Unit:    HSVRGB_core
// ------------------------------------------------------------------


module HSVRGB_core (
  clk, arst_n, r_rsc_mgc_in_wire_d, g_rsc_mgc_in_wire_d, b_rsc_mgc_in_wire_d, H_OUT_rsc_mgc_out_stdreg_d,
      S_OUT_rsc_mgc_out_stdreg_d, V_OUT_rsc_mgc_out_stdreg_d, div_mgc_div_a, div_mgc_div_b,
      div_mgc_div_z, div_mgc_div_1_a, div_mgc_div_1_b, div_mgc_div_1_z, div_mgc_div_2_a,
      div_mgc_div_2_b, div_mgc_div_2_z, div_mgc_div_3_a, div_mgc_div_3_b, div_mgc_div_3_z,
      div_mgc_div_4_a, div_mgc_div_4_b, div_mgc_div_4_z, div_mgc_div_5_a, div_mgc_div_5_b,
      div_mgc_div_5_z, div_mgc_div_6_a, div_mgc_div_6_b, div_mgc_div_6_z, div_mgc_div_7_a,
      div_mgc_div_7_b, div_mgc_div_7_z, div_mgc_div_8_a, div_mgc_div_8_b, div_mgc_div_8_z,
      div_mgc_div_9_a, div_mgc_div_9_b, div_mgc_div_9_z, div_mgc_div_10_a, div_mgc_div_10_b,
      div_mgc_div_10_z, div_mgc_div_11_a, div_mgc_div_11_b, div_mgc_div_11_z, div_mgc_div_12_a,
      div_mgc_div_12_b, div_mgc_div_12_z_oreg, div_mgc_div_13_a, div_mgc_div_13_b,
      div_mgc_div_13_z_oreg
);
  input clk;
  input arst_n;
  input [9:0] r_rsc_mgc_in_wire_d;
  input [9:0] g_rsc_mgc_in_wire_d;
  input [9:0] b_rsc_mgc_in_wire_d;
  output [9:0] H_OUT_rsc_mgc_out_stdreg_d;
  reg [9:0] H_OUT_rsc_mgc_out_stdreg_d;
  output [9:0] S_OUT_rsc_mgc_out_stdreg_d;
  reg [9:0] S_OUT_rsc_mgc_out_stdreg_d;
  output [9:0] V_OUT_rsc_mgc_out_stdreg_d;
  reg [9:0] V_OUT_rsc_mgc_out_stdreg_d;
  output [20:0] div_mgc_div_a;
  reg [20:0] div_mgc_div_a;
  output [20:0] div_mgc_div_b;
  reg [20:0] div_mgc_div_b;
  input [20:0] div_mgc_div_z;
  output [20:0] div_mgc_div_1_a;
  reg [20:0] div_mgc_div_1_a;
  output [20:0] div_mgc_div_1_b;
  reg [20:0] div_mgc_div_1_b;
  input [20:0] div_mgc_div_1_z;
  output [20:0] div_mgc_div_2_a;
  reg [20:0] div_mgc_div_2_a;
  output [20:0] div_mgc_div_2_b;
  reg [20:0] div_mgc_div_2_b;
  input [20:0] div_mgc_div_2_z;
  output [20:0] div_mgc_div_3_a;
  reg [20:0] div_mgc_div_3_a;
  output [20:0] div_mgc_div_3_b;
  reg [20:0] div_mgc_div_3_b;
  input [20:0] div_mgc_div_3_z;
  output [20:0] div_mgc_div_4_a;
  reg [20:0] div_mgc_div_4_a;
  output [20:0] div_mgc_div_4_b;
  reg [20:0] div_mgc_div_4_b;
  input [20:0] div_mgc_div_4_z;
  output [20:0] div_mgc_div_5_a;
  reg [20:0] div_mgc_div_5_a;
  output [20:0] div_mgc_div_5_b;
  reg [20:0] div_mgc_div_5_b;
  input [20:0] div_mgc_div_5_z;
  output [20:0] div_mgc_div_6_a;
  reg [20:0] div_mgc_div_6_a;
  output [20:0] div_mgc_div_6_b;
  reg [20:0] div_mgc_div_6_b;
  input [20:0] div_mgc_div_6_z;
  output [20:0] div_mgc_div_7_a;
  reg [20:0] div_mgc_div_7_a;
  output [20:0] div_mgc_div_7_b;
  reg [20:0] div_mgc_div_7_b;
  input [20:0] div_mgc_div_7_z;
  output [20:0] div_mgc_div_8_a;
  reg [20:0] div_mgc_div_8_a;
  output [20:0] div_mgc_div_8_b;
  reg [20:0] div_mgc_div_8_b;
  input [20:0] div_mgc_div_8_z;
  output [20:0] div_mgc_div_9_a;
  reg [20:0] div_mgc_div_9_a;
  output [20:0] div_mgc_div_9_b;
  reg [20:0] div_mgc_div_9_b;
  input [20:0] div_mgc_div_9_z;
  output [20:0] div_mgc_div_10_a;
  reg [20:0] div_mgc_div_10_a;
  output [20:0] div_mgc_div_10_b;
  reg [20:0] div_mgc_div_10_b;
  input [20:0] div_mgc_div_10_z;
  output [20:0] div_mgc_div_11_a;
  reg [20:0] div_mgc_div_11_a;
  output [20:0] div_mgc_div_11_b;
  reg [20:0] div_mgc_div_11_b;
  input [20:0] div_mgc_div_11_z;
  output [19:0] div_mgc_div_12_a;
  reg [19:0] div_mgc_div_12_a;
  output [9:0] div_mgc_div_12_b;
  reg [9:0] div_mgc_div_12_b;
  input [19:0] div_mgc_div_12_z_oreg;
  output [19:0] div_mgc_div_13_a;
  reg [19:0] div_mgc_div_13_a;
  output [9:0] div_mgc_div_13_b;
  reg [9:0] div_mgc_div_13_b;
  input [19:0] div_mgc_div_13_z_oreg;



  // Interconnect Declarations for Component Instantiations 
  always @(*)
  begin : core
    // Interconnect Declarations
    reg [9:0] r_1_sva;
    reg [9:0] g_1_sva;
    reg [9:0] b_1_sva;
    reg slc_svs;
    reg if_slc_svs;
    reg else_1_slc_svs;
    reg [9:0] max_sg1_lpi_dfm_3;
    reg slc_1_svs;
    reg if_3_slc_svs;
    reg else_5_slc_svs;
    reg [8:0] v_sg1_sva;
    reg [9:0] acc_2_psp_sva;
    reg unequal_tmp_1;
    reg [9:0] r_1_lpi_dfm;
    reg [9:0] g_1_lpi_dfm;
    reg [9:0] b_1_lpi_dfm;
    reg [17:0] s_sg1_1_lpi_dfm;
    reg else_7_equal_svs;
    reg else_7_else_1_equal_svs;
    reg [7:0] else_7_else_1_if_ac_fixed_cctor_sg2_1_sva;
    reg [6:0] else_7_else_1_else_ac_fixed_cctor_sg2_1_sva;
    reg h_sg4_lpi_dfm_1;
    reg h_sg3_lpi_dfm_1;
    reg h_sg2_lpi_dfm_1;
    reg [5:0] h_sg5_2_lpi_dfm_1;
    reg [8:0] else_7_acc_psp_sva;
    reg [6:0] h_sg5_3_sva_2;
    reg [10:0] asn_rnd_1_sg1_sva;
    reg else_7_if_div_2cyc;
    reg [17:0] s_sg1_1_sva_2_duc;
    reg [1:0] else_7_if_1_div_4cyc;
    reg [8:0] else_7_if_1_ac_fixed_cctor_sg1_1_sva_duc;
    reg [1:0] else_7_else_1_if_div_4cyc;
    reg [8:0] div_sdt_2_sva_duc;
    reg [1:0] else_7_else_1_else_div_4cyc;
    reg [8:0] div_sdt_3_sva_duc;
    reg [9:0] max_sg1_lpi_dfm_3_mut;
    reg [9:0] max_sg1_lpi_dfm_3_mut_1;
    reg else_7_else_1_equal_svs_1;
    reg else_7_else_1_equal_svs_2;
    reg else_7_else_1_equal_svs_3;
    reg else_7_else_1_equal_svs_4;
    reg unequal_tmp_2;
    reg unequal_tmp_3;
    reg unequal_tmp_4;
    reg unequal_tmp_5;
    reg unequal_tmp_6;
    reg unequal_tmp_7;
    reg unequal_tmp_8;
    reg else_7_equal_svs_1;
    reg else_7_equal_svs_2;
    reg else_7_equal_svs_3;
    reg else_7_equal_svs_4;
    reg [9:0] max_sg1_lpi_dfm_3_mut_2;
    reg [9:0] max_sg1_lpi_dfm_3_mut_3;
    reg [9:0] max_sg1_lpi_dfm_3_st;
    reg else_7_if_div_2cyc_st;
    reg else_7_equal_svs_st;
    reg [1:0] else_7_if_1_div_4cyc_st;
    reg else_7_else_1_equal_svs_st;
    reg [1:0] else_7_else_1_if_div_4cyc_st;
    reg [1:0] else_7_else_1_else_div_4cyc_st;
    reg [9:0] acc_4_itm;
    reg [9:0] acc_4_itm_1;
    reg [8:0] acc_5_itm_1;
    reg [8:0] acc_5_itm_2;
    reg [8:0] acc_5_itm_3;
    reg [8:0] acc_5_itm_4;
    reg [9:0] acc_2_psp_sva_st_1;
    reg [9:0] max_sg1_lpi_dfm_3_st_1;
    reg else_7_if_div_2cyc_st_1;
    reg [9:0] acc_2_psp_sva_st_2;
    reg [9:0] acc_2_psp_sva_st_3;
    reg [9:0] max_sg1_lpi_dfm_3_st_2;
    reg [9:0] max_sg1_lpi_dfm_3_st_3;
    reg else_7_if_div_2cyc_st_2;
    reg else_7_if_div_2cyc_st_3;
    reg else_7_equal_svs_st_1;
    reg else_7_equal_svs_st_2;
    reg else_7_equal_svs_st_3;
    reg [1:0] else_7_if_1_div_4cyc_st_1;
    reg [1:0] else_7_if_1_div_4cyc_st_2;
    reg [1:0] else_7_if_1_div_4cyc_st_3;
    reg [9:0] acc_2_psp_sva_st_4;
    reg else_7_equal_svs_st_4;
    reg [1:0] else_7_if_1_div_4cyc_st_4;
    reg else_7_else_1_equal_svs_st_1;
    reg else_7_else_1_equal_svs_st_2;
    reg else_7_else_1_equal_svs_st_3;
    reg [1:0] else_7_else_1_if_div_4cyc_st_1;
    reg [1:0] else_7_else_1_if_div_4cyc_st_2;
    reg [1:0] else_7_else_1_if_div_4cyc_st_3;
    reg else_7_else_1_equal_svs_st_4;
    reg [1:0] else_7_else_1_if_div_4cyc_st_4;
    reg [1:0] else_7_else_1_else_div_4cyc_st_1;
    reg [1:0] else_7_else_1_else_div_4cyc_st_2;
    reg [1:0] else_7_else_1_else_div_4cyc_st_3;
    reg [1:0] else_7_else_1_else_div_4cyc_st_4;
    reg main_stage_0_2;
    reg main_stage_0_3;
    reg main_stage_0_4;
    reg main_stage_0_5;
    reg [10:0] else_7_if_1_conc_1_tmp_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_1_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_2_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_3_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_1_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_2_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_3_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_1_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_2_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_3_sg1;
    reg [9:0] else_7_if_conc_1_tmp_mut_sg1;
    reg [9:0] else_7_if_conc_1_tmp_mut_1_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_4_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_5_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_6_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_4_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_5_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_6_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_7_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_8_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_9_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_10_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_11_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_12_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_13_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_14_sg1;
    reg [10:0] else_7_else_1_else_conc_tmp_mut_15_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_4_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_5_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_6_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_7_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_8_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_9_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_10_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_11_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_12_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_13_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_14_sg1;
    reg [10:0] else_7_else_1_if_conc_tmp_mut_15_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_7_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_8_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_9_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_10_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_11_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_12_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_13_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_14_sg1;
    reg [10:0] else_7_if_1_conc_1_tmp_mut_15_sg1;
    reg [9:0] else_7_if_conc_1_tmp_mut_2_sg1;
    reg [9:0] else_7_if_conc_1_tmp_mut_3_sg1;
    reg [9:0] mut_sg1_1;
    reg [9:0] mut_1_sg1_1;
    reg [9:0] mut_2_sg1_1;
    reg [9:0] mut_3_sg1_1;
    reg [9:0] mut_4_sg1_1;
    reg [9:0] mut_5_sg1_1;
    reg [9:0] mut_6_sg1_1;
    reg [9:0] mut_7_sg1_1;
    reg [9:0] mut_8_sg1_1;
    reg [9:0] mut_9_sg1_1;
    reg [9:0] mut_10_sg1_1;
    reg [9:0] mut_11_sg1_1;
    reg [9:0] mut_12_sg1_1;
    reg [9:0] mut_13_sg1_1;
    reg [9:0] mut_14_sg1_1;
    reg [9:0] mut_15_sg1_1;
    reg [9:0] mut_16_sg1_1;
    reg [9:0] mut_17_sg1_1;
    reg [9:0] mut_18_sg1_1;
    reg [9:0] mut_19_sg1_1;
    reg [9:0] mut_20_sg1_1;
    reg [9:0] mut_21_sg1_1;
    reg [9:0] mut_22_sg1_1;
    reg [9:0] mut_23_sg1_1;
    reg [9:0] mut_24_sg1_1;
    reg [9:0] mut_25_sg1_1;
    reg [9:0] mut_26_sg1_1;
    reg [9:0] mut_27_sg1_1;
    reg [9:0] mut_28_sg1_1;
    reg [9:0] mut_29_sg1_1;
    reg [9:0] mut_30_sg1_1;
    reg [9:0] mut_31_sg1_1;
    reg [9:0] mut_32_sg1_1;
    reg [9:0] mut_33_sg1_1;
    reg [9:0] mut_34_sg1_1;
    reg [9:0] mut_35_sg1_1;
    reg [9:0] mut_36_sg1_1;
    reg [9:0] mut_37_sg1_1;
    reg [9:0] mut_38_sg1_1;
    reg [9:0] mut_39_sg1_1;
    reg [9:0] mut_40_sg1_1;
    reg [9:0] mut_41_sg1_1;
    reg [9:0] mut_42_sg1_1;
    reg [9:0] mut_43_sg1_1;
    reg [9:0] mut_44_sg1_1;
    reg [9:0] mut_45_sg1_1;
    reg [9:0] mut_46_sg1_1;
    reg [9:0] mut_47_sg1_1;

    reg[0:0] else_7_else_1_mux_nl;
    reg[0:0] else_7_else_1_mux_1_nl;
    reg[0:0] else_7_else_1_mux_2_nl;
    reg[6:0] else_7_mux_14_nl;
    reg[9:0] mux1h_1_nl;
    begin : mainExit
      forever begin : main
        // C-Step 0 of Loop 'main'
        begin : waitLoop0Exit
          forever begin : waitLoop0
            @(posedge clk or negedge ( arst_n ));
            if ( ~ arst_n )
              disable mainExit;
            if ( clk )
              disable waitLoop0Exit;
          end
        end
        // C-Step 1 of Loop 'main'
        div_mgc_div_a <= 21'b0;
        div_mgc_div_b <= 21'b0;
        div_mgc_div_1_a <= 21'b0;
        div_mgc_div_1_b <= 21'b0;
        div_mgc_div_2_a <= 21'b0;
        div_mgc_div_2_b <= 21'b0;
        div_mgc_div_3_a <= 21'b0;
        div_mgc_div_3_b <= 21'b0;
        div_mgc_div_4_a <= 21'b0;
        div_mgc_div_4_b <= 21'b0;
        div_mgc_div_5_a <= 21'b0;
        div_mgc_div_5_b <= 21'b0;
        div_mgc_div_6_a <= 21'b0;
        div_mgc_div_6_b <= 21'b0;
        div_mgc_div_7_a <= 21'b0;
        div_mgc_div_7_b <= 21'b0;
        div_mgc_div_8_a <= 21'b0;
        div_mgc_div_8_b <= 21'b0;
        div_mgc_div_9_a <= 21'b0;
        div_mgc_div_9_b <= 21'b0;
        div_mgc_div_10_a <= 21'b0;
        div_mgc_div_10_b <= 21'b0;
        div_mgc_div_11_a <= 21'b0;
        div_mgc_div_11_b <= 21'b0;
        div_mgc_div_12_a <= 20'b0;
        div_mgc_div_12_b <= 10'b0;
        div_mgc_div_13_a <= 20'b0;
        div_mgc_div_13_b <= 10'b0;
        if ( main_stage_0_5 ) begin
          h_sg5_3_sva_2 = 7'b0;
          else_7_else_1_else_ac_fixed_cctor_sg2_1_sva = 7'b0;
          else_7_else_1_if_ac_fixed_cctor_sg2_1_sva = 8'b0;
          case (acc_2_psp_sva_st_4)
            10'b0 : begin
              // NOP
            end
            default : begin
              if ( else_7_equal_svs_st_4 ) begin
                case (else_7_if_1_div_4cyc_st_4)
                  2'b0 : begin
                    else_7_if_1_ac_fixed_cctor_sg1_1_sva_duc = div_mgc_div_9_z[8:0];
                  end
                  2'b1 : begin
                    else_7_if_1_ac_fixed_cctor_sg1_1_sva_duc = div_mgc_div_10_z[8:0];
                  end
                  2'b10 : begin
                    else_7_if_1_ac_fixed_cctor_sg1_1_sva_duc = div_mgc_div_11_z[8:0];
                  end
                  2'b11 : begin
                    else_7_if_1_ac_fixed_cctor_sg1_1_sva_duc = div_mgc_div_z[8:0];
                  end
                  default : begin
                  end
                endcase
              end
              else if ( else_7_else_1_equal_svs_st_4 ) begin
                case (else_7_else_1_if_div_4cyc_st_4)
                  2'b0 : begin
                    div_sdt_2_sva_duc = div_mgc_div_5_z[8:0];
                  end
                  2'b1 : begin
                    div_sdt_2_sva_duc = div_mgc_div_6_z[8:0];
                  end
                  2'b10 : begin
                    div_sdt_2_sva_duc = div_mgc_div_7_z[8:0];
                  end
                  2'b11 : begin
                    div_sdt_2_sva_duc = div_mgc_div_8_z[8:0];
                  end
                  default : begin
                  end
                endcase
                else_7_else_1_if_ac_fixed_cctor_sg2_1_sva = (div_sdt_2_sva_duc[8:1])
                    + 8'b1;
              end
              else begin
                case (else_7_else_1_else_div_4cyc_st_4)
                  2'b0 : begin
                    div_sdt_3_sva_duc = div_mgc_div_1_z[8:0];
                  end
                  2'b1 : begin
                    div_sdt_3_sva_duc = div_mgc_div_2_z[8:0];
                  end
                  2'b10 : begin
                    div_sdt_3_sva_duc = div_mgc_div_3_z[8:0];
                  end
                  2'b11 : begin
                    div_sdt_3_sva_duc = div_mgc_div_4_z[8:0];
                  end
                  default : begin
                  end
                endcase
                else_7_else_1_else_ac_fixed_cctor_sg2_1_sva = (div_sdt_3_sva_duc[8:2])
                    + 7'b1;
              end
              else_7_else_1_mux_nl = MUX_s_1_2_2({(else_7_else_1_else_ac_fixed_cctor_sg2_1_sva[0])
                  , (else_7_else_1_if_ac_fixed_cctor_sg2_1_sva[1])}, else_7_else_1_equal_svs_4);
              h_sg4_lpi_dfm_1 = MUX_s_1_2_2({(else_7_else_1_mux_nl) , (else_7_if_1_ac_fixed_cctor_sg1_1_sva_duc[2])},
                  else_7_equal_svs_4);
              else_7_else_1_mux_1_nl = MUX_s_1_2_2({(div_sdt_3_sva_duc[1]) , (else_7_else_1_if_ac_fixed_cctor_sg2_1_sva[0])},
                  else_7_else_1_equal_svs_4);
              h_sg3_lpi_dfm_1 = MUX_s_1_2_2({(else_7_else_1_mux_1_nl) , (else_7_if_1_ac_fixed_cctor_sg1_1_sva_duc[1])},
                  else_7_equal_svs_4);
              else_7_else_1_mux_2_nl = MUX_s_1_2_2({(div_sdt_3_sva_duc[0]) , (div_sdt_2_sva_duc[0])},
                  else_7_else_1_equal_svs_4);
              h_sg2_lpi_dfm_1 = MUX_s_1_2_2({(else_7_else_1_mux_2_nl) , (else_7_if_1_ac_fixed_cctor_sg1_1_sva_duc[0])},
                  else_7_equal_svs_4);
              h_sg5_2_lpi_dfm_1 = MUX1HOT_v_6_3_2({(else_7_else_1_else_ac_fixed_cctor_sg2_1_sva[6:1])
                  , (else_7_else_1_if_ac_fixed_cctor_sg2_1_sva[7:2]) , (else_7_if_1_ac_fixed_cctor_sg1_1_sva_duc[8:3])},
                  {(~(else_7_else_1_equal_svs_4 | else_7_equal_svs_4)) , (else_7_else_1_equal_svs_4
                  & (~ else_7_equal_svs_4)) , else_7_equal_svs_4});
              else_7_acc_psp_sva = readslicef_10_9_1((({(~ h_sg5_2_lpi_dfm_1) , (~
                  h_sg4_lpi_dfm_1) , (~ h_sg3_lpi_dfm_1) , (~ h_sg2_lpi_dfm_1) ,
                  1'b1}) + ({(h_sg5_2_lpi_dfm_1[1:0]) , h_sg4_lpi_dfm_1 , h_sg3_lpi_dfm_1
                  , h_sg2_lpi_dfm_1 , 5'b1})));
              if ( else_7_acc_psp_sva[8] ) begin
                h_sg5_3_sva_2 = (else_7_acc_psp_sva[7:1]) + 7'b101101;
              end
            end
          endcase
          else_7_mux_14_nl = MUX_v_7_2_2({(else_7_acc_psp_sva[7:1]) , h_sg5_3_sva_2},
              else_7_acc_psp_sva[8]);
          H_OUT_rsc_mgc_out_stdreg_d <= {((else_7_mux_14_nl) & ({{6{unequal_tmp_5}},
              unequal_tmp_5})) , ((else_7_acc_psp_sva[0]) & unequal_tmp_5) , 2'b0};
          S_OUT_rsc_mgc_out_stdreg_d <= acc_4_itm_1;
          V_OUT_rsc_mgc_out_stdreg_d <= {1'b0 , acc_5_itm_4};
        end
        if ( main_stage_0_4 ) begin
          s_sg1_1_lpi_dfm = 18'b0;
          case (acc_2_psp_sva_st_3)
            10'b0 : begin
              // NOP
            end
            default : begin
              case (max_sg1_lpi_dfm_3_st_3)
                10'b0 : begin
                  // NOP
                end
                default : begin
                  if ( else_7_if_div_2cyc_st_3 ) begin
                    s_sg1_1_sva_2_duc = div_mgc_div_12_z_oreg[17:0];
                  end
                  else begin
                    s_sg1_1_sva_2_duc = div_mgc_div_13_z_oreg[17:0];
                  end
                end
              endcase
              s_sg1_1_lpi_dfm = s_sg1_1_sva_2_duc & ({{17{unequal_tmp_8}}, unequal_tmp_8});
              if ( else_7_equal_svs_st_3 ) begin
                case (else_7_if_1_div_4cyc_st_3)
                  2'b0 : begin
                    div_mgc_div_9_a <= {else_7_if_1_conc_1_tmp_mut_9_sg1 , 10'b0};
                    div_mgc_div_9_b <= {1'b0 , mut_41_sg1_1 , 10'b0};
                  end
                  2'b1 : begin
                    div_mgc_div_10_a <= {else_7_if_1_conc_1_tmp_mut_12_sg1 , 10'b0};
                    div_mgc_div_10_b <= {1'b0 , mut_44_sg1_1 , 10'b0};
                  end
                  2'b10 : begin
                    div_mgc_div_11_a <= {else_7_if_1_conc_1_tmp_mut_15_sg1 , 10'b0};
                    div_mgc_div_11_b <= {1'b0 , mut_47_sg1_1 , 10'b0};
                  end
                  2'b11 : begin
                    div_mgc_div_a <= {else_7_if_1_conc_1_tmp_mut_6_sg1 , 10'b0};
                    div_mgc_div_b <= {1'b0 , mut_14_sg1_1 , 10'b0};
                  end
                  default : begin
                  end
                endcase
              end
              else if ( else_7_else_1_equal_svs_st_3 ) begin
                case (else_7_else_1_if_div_4cyc_st_3)
                  2'b0 : begin
                    div_mgc_div_5_a <= {else_7_else_1_if_conc_tmp_mut_6_sg1 , 10'b0};
                    div_mgc_div_5_b <= {1'b0 , mut_29_sg1_1 , 10'b0};
                  end
                  2'b1 : begin
                    div_mgc_div_6_a <= {else_7_else_1_if_conc_tmp_mut_9_sg1 , 10'b0};
                    div_mgc_div_6_b <= {1'b0 , mut_32_sg1_1 , 10'b0};
                  end
                  2'b10 : begin
                    div_mgc_div_7_a <= {else_7_else_1_if_conc_tmp_mut_12_sg1 , 10'b0};
                    div_mgc_div_7_b <= {1'b0 , mut_35_sg1_1 , 10'b0};
                  end
                  2'b11 : begin
                    div_mgc_div_8_a <= {else_7_else_1_if_conc_tmp_mut_15_sg1 , 10'b0};
                    div_mgc_div_8_b <= {1'b0 , mut_38_sg1_1 , 10'b0};
                  end
                  default : begin
                  end
                endcase
              end
              else begin
                case (else_7_else_1_else_div_4cyc_st_3)
                  2'b0 : begin
                    div_mgc_div_1_a <= {else_7_else_1_else_conc_tmp_mut_6_sg1 , 10'b0};
                    div_mgc_div_1_b <= {1'b0 , mut_17_sg1_1 , 10'b0};
                  end
                  2'b1 : begin
                    div_mgc_div_2_a <= {else_7_else_1_else_conc_tmp_mut_9_sg1 , 10'b0};
                    div_mgc_div_2_b <= {1'b0 , mut_20_sg1_1 , 10'b0};
                  end
                  2'b10 : begin
                    div_mgc_div_3_a <= {else_7_else_1_else_conc_tmp_mut_12_sg1 ,
                        10'b0};
                    div_mgc_div_3_b <= {1'b0 , mut_23_sg1_1 , 10'b0};
                  end
                  2'b11 : begin
                    div_mgc_div_4_a <= {else_7_else_1_else_conc_tmp_mut_15_sg1 ,
                        10'b0};
                    div_mgc_div_4_b <= {1'b0 , mut_26_sg1_1 , 10'b0};
                  end
                  default : begin
                  end
                endcase
              end
            end
          endcase
          asn_rnd_1_sg1_sva = readslicef_18_11_7(conv_u2u_36_18(18'b11001 * (s_sg1_1_lpi_dfm
              & ({{17{unequal_tmp_4}}, unequal_tmp_4}))));
          acc_4_itm = (asn_rnd_1_sg1_sva[10:1]) + conv_u2u_1_10(asn_rnd_1_sg1_sva[0]);
        end
        if ( main_stage_0_3 ) begin
          case (acc_2_psp_sva_st_2)
            10'b0 : begin
              // NOP
            end
            default : begin
              if ( else_7_equal_svs_st_2 ) begin
                case (else_7_if_1_div_4cyc_st_2)
                  2'b0 : begin
                    div_mgc_div_9_a <= {else_7_if_1_conc_1_tmp_mut_8_sg1 , 10'b0};
                    div_mgc_div_9_b <= {1'b0 , mut_40_sg1_1 , 10'b0};
                  end
                  2'b1 : begin
                    div_mgc_div_10_a <= {else_7_if_1_conc_1_tmp_mut_11_sg1 , 10'b0};
                    div_mgc_div_10_b <= {1'b0 , mut_43_sg1_1 , 10'b0};
                  end
                  2'b10 : begin
                    div_mgc_div_11_a <= {else_7_if_1_conc_1_tmp_mut_14_sg1 , 10'b0};
                    div_mgc_div_11_b <= {1'b0 , mut_46_sg1_1 , 10'b0};
                  end
                  2'b11 : begin
                    div_mgc_div_a <= {else_7_if_1_conc_1_tmp_mut_5_sg1 , 10'b0};
                    div_mgc_div_b <= {1'b0 , mut_13_sg1_1 , 10'b0};
                  end
                  default : begin
                  end
                endcase
              end
              else if ( else_7_else_1_equal_svs_st_2 ) begin
                case (else_7_else_1_if_div_4cyc_st_2)
                  2'b0 : begin
                    div_mgc_div_5_a <= {else_7_else_1_if_conc_tmp_mut_5_sg1 , 10'b0};
                    div_mgc_div_5_b <= {1'b0 , mut_28_sg1_1 , 10'b0};
                  end
                  2'b1 : begin
                    div_mgc_div_6_a <= {else_7_else_1_if_conc_tmp_mut_8_sg1 , 10'b0};
                    div_mgc_div_6_b <= {1'b0 , mut_31_sg1_1 , 10'b0};
                  end
                  2'b10 : begin
                    div_mgc_div_7_a <= {else_7_else_1_if_conc_tmp_mut_11_sg1 , 10'b0};
                    div_mgc_div_7_b <= {1'b0 , mut_34_sg1_1 , 10'b0};
                  end
                  2'b11 : begin
                    div_mgc_div_8_a <= {else_7_else_1_if_conc_tmp_mut_14_sg1 , 10'b0};
                    div_mgc_div_8_b <= {1'b0 , mut_37_sg1_1 , 10'b0};
                  end
                  default : begin
                  end
                endcase
              end
              else begin
                case (else_7_else_1_else_div_4cyc_st_2)
                  2'b0 : begin
                    div_mgc_div_1_a <= {else_7_else_1_else_conc_tmp_mut_5_sg1 , 10'b0};
                    div_mgc_div_1_b <= {1'b0 , mut_16_sg1_1 , 10'b0};
                  end
                  2'b1 : begin
                    div_mgc_div_2_a <= {else_7_else_1_else_conc_tmp_mut_8_sg1 , 10'b0};
                    div_mgc_div_2_b <= {1'b0 , mut_19_sg1_1 , 10'b0};
                  end
                  2'b10 : begin
                    div_mgc_div_3_a <= {else_7_else_1_else_conc_tmp_mut_11_sg1 ,
                        10'b0};
                    div_mgc_div_3_b <= {1'b0 , mut_22_sg1_1 , 10'b0};
                  end
                  2'b11 : begin
                    div_mgc_div_4_a <= {else_7_else_1_else_conc_tmp_mut_14_sg1 ,
                        10'b0};
                    div_mgc_div_4_b <= {1'b0 , mut_25_sg1_1 , 10'b0};
                  end
                  default : begin
                  end
                endcase
              end
            end
          endcase
        end
        if ( main_stage_0_2 ) begin
          case (acc_2_psp_sva_st_1)
            10'b0 : begin
              // NOP
            end
            default : begin
              case (max_sg1_lpi_dfm_3_st_1)
                10'b0 : begin
                  // NOP
                end
                default : begin
                  if ( else_7_if_div_2cyc_st_1 ) begin
                    div_mgc_div_12_a <= {else_7_if_conc_1_tmp_mut_2_sg1 , 10'b0};
                    div_mgc_div_12_b <= max_sg1_lpi_dfm_3_mut_2;
                  end
                  else begin
                    div_mgc_div_13_a <= {else_7_if_conc_1_tmp_mut_3_sg1 , 10'b0};
                    div_mgc_div_13_b <= max_sg1_lpi_dfm_3_mut_3;
                  end
                end
              endcase
              if ( else_7_equal_svs_st_1 ) begin
                case (else_7_if_1_div_4cyc_st_1)
                  2'b0 : begin
                    div_mgc_div_9_a <= {else_7_if_1_conc_1_tmp_mut_7_sg1 , 10'b0};
                    div_mgc_div_9_b <= {1'b0 , mut_39_sg1_1 , 10'b0};
                  end
                  2'b1 : begin
                    div_mgc_div_10_a <= {else_7_if_1_conc_1_tmp_mut_10_sg1 , 10'b0};
                    div_mgc_div_10_b <= {1'b0 , mut_42_sg1_1 , 10'b0};
                  end
                  2'b10 : begin
                    div_mgc_div_11_a <= {else_7_if_1_conc_1_tmp_mut_13_sg1 , 10'b0};
                    div_mgc_div_11_b <= {1'b0 , mut_45_sg1_1 , 10'b0};
                  end
                  2'b11 : begin
                    div_mgc_div_a <= {else_7_if_1_conc_1_tmp_mut_4_sg1 , 10'b0};
                    div_mgc_div_b <= {1'b0 , mut_12_sg1_1 , 10'b0};
                  end
                  default : begin
                  end
                endcase
              end
              else if ( else_7_else_1_equal_svs_st_1 ) begin
                case (else_7_else_1_if_div_4cyc_st_1)
                  2'b0 : begin
                    div_mgc_div_5_a <= {else_7_else_1_if_conc_tmp_mut_4_sg1 , 10'b0};
                    div_mgc_div_5_b <= {1'b0 , mut_27_sg1_1 , 10'b0};
                  end
                  2'b1 : begin
                    div_mgc_div_6_a <= {else_7_else_1_if_conc_tmp_mut_7_sg1 , 10'b0};
                    div_mgc_div_6_b <= {1'b0 , mut_30_sg1_1 , 10'b0};
                  end
                  2'b10 : begin
                    div_mgc_div_7_a <= {else_7_else_1_if_conc_tmp_mut_10_sg1 , 10'b0};
                    div_mgc_div_7_b <= {1'b0 , mut_33_sg1_1 , 10'b0};
                  end
                  2'b11 : begin
                    div_mgc_div_8_a <= {else_7_else_1_if_conc_tmp_mut_13_sg1 , 10'b0};
                    div_mgc_div_8_b <= {1'b0 , mut_36_sg1_1 , 10'b0};
                  end
                  default : begin
                  end
                endcase
              end
              else begin
                case (else_7_else_1_else_div_4cyc_st_1)
                  2'b0 : begin
                    div_mgc_div_1_a <= {else_7_else_1_else_conc_tmp_mut_4_sg1 , 10'b0};
                    div_mgc_div_1_b <= {1'b0 , mut_15_sg1_1 , 10'b0};
                  end
                  2'b1 : begin
                    div_mgc_div_2_a <= {else_7_else_1_else_conc_tmp_mut_7_sg1 , 10'b0};
                    div_mgc_div_2_b <= {1'b0 , mut_18_sg1_1 , 10'b0};
                  end
                  2'b10 : begin
                    div_mgc_div_3_a <= {else_7_else_1_else_conc_tmp_mut_10_sg1 ,
                        10'b0};
                    div_mgc_div_3_b <= {1'b0 , mut_21_sg1_1 , 10'b0};
                  end
                  2'b11 : begin
                    div_mgc_div_4_a <= {else_7_else_1_else_conc_tmp_mut_13_sg1 ,
                        10'b0};
                    div_mgc_div_4_b <= {1'b0 , mut_24_sg1_1 , 10'b0};
                  end
                  default : begin
                  end
                endcase
              end
            end
          endcase
        end
        if_3_slc_svs = 1'b0;
        if_slc_svs = 1'b0;
        else_7_else_1_equal_svs = 1'b0;
        else_5_slc_svs = 1'b0;
        else_1_slc_svs = 1'b0;
        r_1_sva = r_rsc_mgc_in_wire_d;
        g_1_sva = g_rsc_mgc_in_wire_d;
        b_1_sva = b_rsc_mgc_in_wire_d;
        slc_svs = readslicef_12_1_11((({1'b1 , r_1_sva , 1'b1}) + conv_u2u_11_12({(~
            g_1_sva) , 1'b1})));
        if ( slc_svs ) begin
          else_1_slc_svs = readslicef_12_1_11((({1'b1 , g_1_sva , 1'b1}) + conv_u2u_11_12({(~
              b_1_sva) , 1'b1})));
        end
        else begin
          if_slc_svs = readslicef_12_1_11((({1'b1 , r_1_sva , 1'b1}) + conv_u2u_11_12({(~
              b_1_sva) , 1'b1})));
        end
        max_sg1_lpi_dfm_3 = MUX1HOT_v_10_3_2({r_1_sva , b_1_sva , g_1_sva}, {(~(if_slc_svs
            | slc_svs)) , ((if_slc_svs & (~ slc_svs)) | (else_1_slc_svs & slc_svs))
            , ((~ else_1_slc_svs) & slc_svs)});
        slc_1_svs = readslicef_12_1_11((({1'b1 , g_1_sva , 1'b1}) + conv_u2u_11_12({(~
            r_1_sva) , 1'b1})));
        if ( slc_1_svs ) begin
          else_5_slc_svs = readslicef_12_1_11((({1'b1 , b_1_sva , 1'b1}) + conv_u2u_11_12({(~
              g_1_sva) , 1'b1})));
        end
        else begin
          if_3_slc_svs = readslicef_12_1_11((({1'b1 , b_1_sva , 1'b1}) + conv_u2u_11_12({(~
              r_1_sva) , 1'b1})));
        end
        v_sg1_sva = readslicef_14_9_5(conv_u2u_28_14(14'b11001 * conv_u2u_10_14(max_sg1_lpi_dfm_3)));
        mux1h_1_nl = MUX1HOT_v_10_3_2({r_1_sva , b_1_sva , g_1_sva}, {(~(if_3_slc_svs
            | slc_1_svs)) , ((if_3_slc_svs & (~ slc_1_svs)) | (else_5_slc_svs & slc_1_svs))
            , ((~ else_5_slc_svs) & slc_1_svs)});
        acc_2_psp_sva = readslicef_11_10_1((({max_sg1_lpi_dfm_3 , 1'b1}) + ({(~ (mux1h_1_nl))
            , 1'b1})));
        case (acc_2_psp_sva)
          10'b0 : begin
            // NOP
          end
          default : begin
            unequal_tmp_1 = (max_sg1_lpi_dfm_3[9]) | (max_sg1_lpi_dfm_3[8]) | (max_sg1_lpi_dfm_3[7])
                | (max_sg1_lpi_dfm_3[6]) | (max_sg1_lpi_dfm_3[5]) | (max_sg1_lpi_dfm_3[4])
                | (max_sg1_lpi_dfm_3[3]) | (max_sg1_lpi_dfm_3[2]) | (max_sg1_lpi_dfm_3[1])
                | (max_sg1_lpi_dfm_3[0]);
            max_sg1_lpi_dfm_3_st = max_sg1_lpi_dfm_3;
            case (max_sg1_lpi_dfm_3)
              10'b0 : begin
                // NOP
              end
              default : begin
                else_7_if_div_2cyc = ~ else_7_if_div_2cyc;
                else_7_if_div_2cyc_st = else_7_if_div_2cyc;
                if ( else_7_if_div_2cyc ) begin
                  else_7_if_conc_1_tmp_mut_sg1 = acc_2_psp_sva;
                  div_mgc_div_12_a <= {acc_2_psp_sva , 10'b0};
                  max_sg1_lpi_dfm_3_mut = max_sg1_lpi_dfm_3;
                  div_mgc_div_12_b <= max_sg1_lpi_dfm_3;
                end
                else begin
                  else_7_if_conc_1_tmp_mut_1_sg1 = acc_2_psp_sva;
                  div_mgc_div_13_a <= {acc_2_psp_sva , 10'b0};
                  max_sg1_lpi_dfm_3_mut_1 = max_sg1_lpi_dfm_3;
                  div_mgc_div_13_b <= max_sg1_lpi_dfm_3;
                end
              end
            endcase
            r_1_lpi_dfm = r_1_sva & ({{9{unequal_tmp_1}}, unequal_tmp_1});
            g_1_lpi_dfm = g_1_sva & ({{9{unequal_tmp_1}}, unequal_tmp_1});
            b_1_lpi_dfm = b_1_sva & ({{9{unequal_tmp_1}}, unequal_tmp_1});
            else_7_equal_svs = r_1_lpi_dfm == max_sg1_lpi_dfm_3;
            else_7_equal_svs_st = else_7_equal_svs;
            if ( else_7_equal_svs ) begin
              else_7_if_1_conc_1_tmp_sg1 = readslicef_12_11_1((({1'b1 , g_1_lpi_dfm
                  , 1'b1}) + conv_u2s_11_12({(~ b_1_lpi_dfm) , 1'b1})));
              else_7_if_1_div_4cyc = else_7_if_1_div_4cyc + 2'b1;
              else_7_if_1_div_4cyc_st = else_7_if_1_div_4cyc;
              case (else_7_if_1_div_4cyc)
                2'b0 : begin
                  else_7_if_1_conc_1_tmp_mut_1_sg1 = else_7_if_1_conc_1_tmp_sg1;
                  div_mgc_div_9_a <= {else_7_if_1_conc_1_tmp_sg1 , 10'b0};
                  mut_9_sg1_1 = acc_2_psp_sva;
                  div_mgc_div_9_b <= {1'b0 , acc_2_psp_sva , 10'b0};
                end
                2'b1 : begin
                  else_7_if_1_conc_1_tmp_mut_2_sg1 = else_7_if_1_conc_1_tmp_sg1;
                  div_mgc_div_10_a <= {else_7_if_1_conc_1_tmp_sg1 , 10'b0};
                  mut_10_sg1_1 = acc_2_psp_sva;
                  div_mgc_div_10_b <= {1'b0 , acc_2_psp_sva , 10'b0};
                end
                2'b10 : begin
                  else_7_if_1_conc_1_tmp_mut_3_sg1 = else_7_if_1_conc_1_tmp_sg1;
                  div_mgc_div_11_a <= {else_7_if_1_conc_1_tmp_sg1 , 10'b0};
                  mut_11_sg1_1 = acc_2_psp_sva;
                  div_mgc_div_11_b <= {1'b0 , acc_2_psp_sva , 10'b0};
                end
                2'b11 : begin
                  else_7_if_1_conc_1_tmp_mut_sg1 = else_7_if_1_conc_1_tmp_sg1;
                  div_mgc_div_a <= {else_7_if_1_conc_1_tmp_sg1 , 10'b0};
                  mut_sg1_1 = acc_2_psp_sva;
                  div_mgc_div_b <= {1'b0 , acc_2_psp_sva , 10'b0};
                end
                default : begin
                end
              endcase
            end
            else begin
              else_7_else_1_equal_svs = g_1_lpi_dfm == max_sg1_lpi_dfm_3;
              else_7_else_1_equal_svs_st = else_7_else_1_equal_svs;
              if ( else_7_else_1_equal_svs ) begin
                else_7_else_1_if_conc_tmp_sg1 = readslicef_12_11_1((({1'b1 , b_1_lpi_dfm
                    , 1'b1}) + conv_u2s_11_12({(~ r_1_lpi_dfm) , 1'b1})));
                else_7_else_1_if_div_4cyc = else_7_else_1_if_div_4cyc + 2'b1;
                else_7_else_1_if_div_4cyc_st = else_7_else_1_if_div_4cyc;
                case (else_7_else_1_if_div_4cyc)
                  2'b0 : begin
                    else_7_else_1_if_conc_tmp_mut_sg1 = else_7_else_1_if_conc_tmp_sg1;
                    div_mgc_div_5_a <= {else_7_else_1_if_conc_tmp_sg1 , 10'b0};
                    mut_5_sg1_1 = acc_2_psp_sva;
                    div_mgc_div_5_b <= {1'b0 , acc_2_psp_sva , 10'b0};
                  end
                  2'b1 : begin
                    else_7_else_1_if_conc_tmp_mut_1_sg1 = else_7_else_1_if_conc_tmp_sg1;
                    div_mgc_div_6_a <= {else_7_else_1_if_conc_tmp_sg1 , 10'b0};
                    mut_6_sg1_1 = acc_2_psp_sva;
                    div_mgc_div_6_b <= {1'b0 , acc_2_psp_sva , 10'b0};
                  end
                  2'b10 : begin
                    else_7_else_1_if_conc_tmp_mut_2_sg1 = else_7_else_1_if_conc_tmp_sg1;
                    div_mgc_div_7_a <= {else_7_else_1_if_conc_tmp_sg1 , 10'b0};
                    mut_7_sg1_1 = acc_2_psp_sva;
                    div_mgc_div_7_b <= {1'b0 , acc_2_psp_sva , 10'b0};
                  end
                  2'b11 : begin
                    else_7_else_1_if_conc_tmp_mut_3_sg1 = else_7_else_1_if_conc_tmp_sg1;
                    div_mgc_div_8_a <= {else_7_else_1_if_conc_tmp_sg1 , 10'b0};
                    mut_8_sg1_1 = acc_2_psp_sva;
                    div_mgc_div_8_b <= {1'b0 , acc_2_psp_sva , 10'b0};
                  end
                  default : begin
                  end
                endcase
              end
              else begin
                else_7_else_1_else_conc_tmp_sg1 = readslicef_12_11_1((({1'b1 , r_1_lpi_dfm
                    , 1'b1}) + conv_u2s_11_12({(~ g_1_lpi_dfm) , 1'b1})));
                else_7_else_1_else_div_4cyc = else_7_else_1_else_div_4cyc + 2'b1;
                else_7_else_1_else_div_4cyc_st = else_7_else_1_else_div_4cyc;
                case (else_7_else_1_else_div_4cyc)
                  2'b0 : begin
                    else_7_else_1_else_conc_tmp_mut_sg1 = else_7_else_1_else_conc_tmp_sg1;
                    div_mgc_div_1_a <= {else_7_else_1_else_conc_tmp_sg1 , 10'b0};
                    mut_1_sg1_1 = acc_2_psp_sva;
                    div_mgc_div_1_b <= {1'b0 , acc_2_psp_sva , 10'b0};
                  end
                  2'b1 : begin
                    else_7_else_1_else_conc_tmp_mut_1_sg1 = else_7_else_1_else_conc_tmp_sg1;
                    div_mgc_div_2_a <= {else_7_else_1_else_conc_tmp_sg1 , 10'b0};
                    mut_2_sg1_1 = acc_2_psp_sva;
                    div_mgc_div_2_b <= {1'b0 , acc_2_psp_sva , 10'b0};
                  end
                  2'b10 : begin
                    else_7_else_1_else_conc_tmp_mut_2_sg1 = else_7_else_1_else_conc_tmp_sg1;
                    div_mgc_div_3_a <= {else_7_else_1_else_conc_tmp_sg1 , 10'b0};
                    mut_3_sg1_1 = acc_2_psp_sva;
                    div_mgc_div_3_b <= {1'b0 , acc_2_psp_sva , 10'b0};
                  end
                  2'b11 : begin
                    else_7_else_1_else_conc_tmp_mut_3_sg1 = else_7_else_1_else_conc_tmp_sg1;
                    div_mgc_div_4_a <= {else_7_else_1_else_conc_tmp_sg1 , 10'b0};
                    mut_4_sg1_1 = acc_2_psp_sva;
                    div_mgc_div_4_b <= {1'b0 , acc_2_psp_sva , 10'b0};
                  end
                  default : begin
                  end
                endcase
              end
            end
          end
        endcase
        else_7_else_1_equal_svs_4 = else_7_else_1_equal_svs_3;
        else_7_else_1_equal_svs_3 = else_7_else_1_equal_svs_2;
        else_7_else_1_equal_svs_2 = else_7_else_1_equal_svs_1;
        else_7_else_1_equal_svs_1 = else_7_else_1_equal_svs;
        unequal_tmp_5 = unequal_tmp_4;
        unequal_tmp_4 = unequal_tmp_3;
        unequal_tmp_3 = unequal_tmp_2;
        unequal_tmp_2 = (acc_2_psp_sva[9]) | (acc_2_psp_sva[8]) | (acc_2_psp_sva[7])
            | (acc_2_psp_sva[6]) | (acc_2_psp_sva[5]) | (acc_2_psp_sva[4]) | (acc_2_psp_sva[3])
            | (acc_2_psp_sva[2]) | (acc_2_psp_sva[1]) | (acc_2_psp_sva[0]);
        unequal_tmp_8 = unequal_tmp_7;
        unequal_tmp_7 = unequal_tmp_6;
        unequal_tmp_6 = unequal_tmp_1;
        else_7_equal_svs_4 = else_7_equal_svs_3;
        else_7_equal_svs_3 = else_7_equal_svs_2;
        else_7_equal_svs_2 = else_7_equal_svs_1;
        else_7_equal_svs_1 = else_7_equal_svs;
        else_7_if_1_conc_1_tmp_mut_6_sg1 = else_7_if_1_conc_1_tmp_mut_5_sg1;
        else_7_if_1_conc_1_tmp_mut_5_sg1 = else_7_if_1_conc_1_tmp_mut_4_sg1;
        else_7_if_1_conc_1_tmp_mut_4_sg1 = else_7_if_1_conc_1_tmp_mut_sg1;
        mut_14_sg1_1 = mut_13_sg1_1;
        mut_13_sg1_1 = mut_12_sg1_1;
        mut_12_sg1_1 = mut_sg1_1;
        else_7_else_1_else_conc_tmp_mut_6_sg1 = else_7_else_1_else_conc_tmp_mut_5_sg1;
        else_7_else_1_else_conc_tmp_mut_5_sg1 = else_7_else_1_else_conc_tmp_mut_4_sg1;
        else_7_else_1_else_conc_tmp_mut_4_sg1 = else_7_else_1_else_conc_tmp_mut_sg1;
        mut_17_sg1_1 = mut_16_sg1_1;
        mut_16_sg1_1 = mut_15_sg1_1;
        mut_15_sg1_1 = mut_1_sg1_1;
        else_7_else_1_else_conc_tmp_mut_9_sg1 = else_7_else_1_else_conc_tmp_mut_8_sg1;
        else_7_else_1_else_conc_tmp_mut_8_sg1 = else_7_else_1_else_conc_tmp_mut_7_sg1;
        else_7_else_1_else_conc_tmp_mut_7_sg1 = else_7_else_1_else_conc_tmp_mut_1_sg1;
        mut_20_sg1_1 = mut_19_sg1_1;
        mut_19_sg1_1 = mut_18_sg1_1;
        mut_18_sg1_1 = mut_2_sg1_1;
        else_7_else_1_else_conc_tmp_mut_12_sg1 = else_7_else_1_else_conc_tmp_mut_11_sg1;
        else_7_else_1_else_conc_tmp_mut_11_sg1 = else_7_else_1_else_conc_tmp_mut_10_sg1;
        else_7_else_1_else_conc_tmp_mut_10_sg1 = else_7_else_1_else_conc_tmp_mut_2_sg1;
        mut_23_sg1_1 = mut_22_sg1_1;
        mut_22_sg1_1 = mut_21_sg1_1;
        mut_21_sg1_1 = mut_3_sg1_1;
        else_7_else_1_else_conc_tmp_mut_15_sg1 = else_7_else_1_else_conc_tmp_mut_14_sg1;
        else_7_else_1_else_conc_tmp_mut_14_sg1 = else_7_else_1_else_conc_tmp_mut_13_sg1;
        else_7_else_1_else_conc_tmp_mut_13_sg1 = else_7_else_1_else_conc_tmp_mut_3_sg1;
        mut_26_sg1_1 = mut_25_sg1_1;
        mut_25_sg1_1 = mut_24_sg1_1;
        mut_24_sg1_1 = mut_4_sg1_1;
        else_7_else_1_if_conc_tmp_mut_6_sg1 = else_7_else_1_if_conc_tmp_mut_5_sg1;
        else_7_else_1_if_conc_tmp_mut_5_sg1 = else_7_else_1_if_conc_tmp_mut_4_sg1;
        else_7_else_1_if_conc_tmp_mut_4_sg1 = else_7_else_1_if_conc_tmp_mut_sg1;
        mut_29_sg1_1 = mut_28_sg1_1;
        mut_28_sg1_1 = mut_27_sg1_1;
        mut_27_sg1_1 = mut_5_sg1_1;
        else_7_else_1_if_conc_tmp_mut_9_sg1 = else_7_else_1_if_conc_tmp_mut_8_sg1;
        else_7_else_1_if_conc_tmp_mut_8_sg1 = else_7_else_1_if_conc_tmp_mut_7_sg1;
        else_7_else_1_if_conc_tmp_mut_7_sg1 = else_7_else_1_if_conc_tmp_mut_1_sg1;
        mut_32_sg1_1 = mut_31_sg1_1;
        mut_31_sg1_1 = mut_30_sg1_1;
        mut_30_sg1_1 = mut_6_sg1_1;
        else_7_else_1_if_conc_tmp_mut_12_sg1 = else_7_else_1_if_conc_tmp_mut_11_sg1;
        else_7_else_1_if_conc_tmp_mut_11_sg1 = else_7_else_1_if_conc_tmp_mut_10_sg1;
        else_7_else_1_if_conc_tmp_mut_10_sg1 = else_7_else_1_if_conc_tmp_mut_2_sg1;
        mut_35_sg1_1 = mut_34_sg1_1;
        mut_34_sg1_1 = mut_33_sg1_1;
        mut_33_sg1_1 = mut_7_sg1_1;
        else_7_else_1_if_conc_tmp_mut_15_sg1 = else_7_else_1_if_conc_tmp_mut_14_sg1;
        else_7_else_1_if_conc_tmp_mut_14_sg1 = else_7_else_1_if_conc_tmp_mut_13_sg1;
        else_7_else_1_if_conc_tmp_mut_13_sg1 = else_7_else_1_if_conc_tmp_mut_3_sg1;
        mut_38_sg1_1 = mut_37_sg1_1;
        mut_37_sg1_1 = mut_36_sg1_1;
        mut_36_sg1_1 = mut_8_sg1_1;
        else_7_if_1_conc_1_tmp_mut_9_sg1 = else_7_if_1_conc_1_tmp_mut_8_sg1;
        else_7_if_1_conc_1_tmp_mut_8_sg1 = else_7_if_1_conc_1_tmp_mut_7_sg1;
        else_7_if_1_conc_1_tmp_mut_7_sg1 = else_7_if_1_conc_1_tmp_mut_1_sg1;
        mut_41_sg1_1 = mut_40_sg1_1;
        mut_40_sg1_1 = mut_39_sg1_1;
        mut_39_sg1_1 = mut_9_sg1_1;
        else_7_if_1_conc_1_tmp_mut_12_sg1 = else_7_if_1_conc_1_tmp_mut_11_sg1;
        else_7_if_1_conc_1_tmp_mut_11_sg1 = else_7_if_1_conc_1_tmp_mut_10_sg1;
        else_7_if_1_conc_1_tmp_mut_10_sg1 = else_7_if_1_conc_1_tmp_mut_2_sg1;
        mut_44_sg1_1 = mut_43_sg1_1;
        mut_43_sg1_1 = mut_42_sg1_1;
        mut_42_sg1_1 = mut_10_sg1_1;
        else_7_if_1_conc_1_tmp_mut_15_sg1 = else_7_if_1_conc_1_tmp_mut_14_sg1;
        else_7_if_1_conc_1_tmp_mut_14_sg1 = else_7_if_1_conc_1_tmp_mut_13_sg1;
        else_7_if_1_conc_1_tmp_mut_13_sg1 = else_7_if_1_conc_1_tmp_mut_3_sg1;
        mut_47_sg1_1 = mut_46_sg1_1;
        mut_46_sg1_1 = mut_45_sg1_1;
        mut_45_sg1_1 = mut_11_sg1_1;
        else_7_if_conc_1_tmp_mut_2_sg1 = else_7_if_conc_1_tmp_mut_sg1;
        max_sg1_lpi_dfm_3_mut_2 = max_sg1_lpi_dfm_3_mut;
        else_7_if_conc_1_tmp_mut_3_sg1 = else_7_if_conc_1_tmp_mut_1_sg1;
        max_sg1_lpi_dfm_3_mut_3 = max_sg1_lpi_dfm_3_mut_1;
        acc_4_itm_1 = acc_4_itm;
        acc_5_itm_4 = acc_5_itm_3;
        acc_5_itm_3 = acc_5_itm_2;
        acc_5_itm_2 = acc_5_itm_1;
        acc_5_itm_1 = conv_u2u_8_9(v_sg1_sva[8:1]) + conv_u2u_1_9(v_sg1_sva[0]);
        acc_2_psp_sva_st_4 = acc_2_psp_sva_st_3;
        acc_2_psp_sva_st_3 = acc_2_psp_sva_st_2;
        acc_2_psp_sva_st_2 = acc_2_psp_sva_st_1;
        acc_2_psp_sva_st_1 = acc_2_psp_sva;
        max_sg1_lpi_dfm_3_st_3 = max_sg1_lpi_dfm_3_st_2;
        max_sg1_lpi_dfm_3_st_2 = max_sg1_lpi_dfm_3_st_1;
        max_sg1_lpi_dfm_3_st_1 = max_sg1_lpi_dfm_3_st;
        else_7_if_div_2cyc_st_3 = else_7_if_div_2cyc_st_2;
        else_7_if_div_2cyc_st_2 = else_7_if_div_2cyc_st_1;
        else_7_if_div_2cyc_st_1 = else_7_if_div_2cyc_st;
        else_7_equal_svs_st_4 = else_7_equal_svs_st_3;
        else_7_equal_svs_st_3 = else_7_equal_svs_st_2;
        else_7_equal_svs_st_2 = else_7_equal_svs_st_1;
        else_7_equal_svs_st_1 = else_7_equal_svs_st;
        else_7_if_1_div_4cyc_st_4 = else_7_if_1_div_4cyc_st_3;
        else_7_if_1_div_4cyc_st_3 = else_7_if_1_div_4cyc_st_2;
        else_7_if_1_div_4cyc_st_2 = else_7_if_1_div_4cyc_st_1;
        else_7_if_1_div_4cyc_st_1 = else_7_if_1_div_4cyc_st;
        else_7_else_1_equal_svs_st_4 = else_7_else_1_equal_svs_st_3;
        else_7_else_1_equal_svs_st_3 = else_7_else_1_equal_svs_st_2;
        else_7_else_1_equal_svs_st_2 = else_7_else_1_equal_svs_st_1;
        else_7_else_1_equal_svs_st_1 = else_7_else_1_equal_svs_st;
        else_7_else_1_if_div_4cyc_st_4 = else_7_else_1_if_div_4cyc_st_3;
        else_7_else_1_if_div_4cyc_st_3 = else_7_else_1_if_div_4cyc_st_2;
        else_7_else_1_if_div_4cyc_st_2 = else_7_else_1_if_div_4cyc_st_1;
        else_7_else_1_if_div_4cyc_st_1 = else_7_else_1_if_div_4cyc_st;
        else_7_else_1_else_div_4cyc_st_4 = else_7_else_1_else_div_4cyc_st_3;
        else_7_else_1_else_div_4cyc_st_3 = else_7_else_1_else_div_4cyc_st_2;
        else_7_else_1_else_div_4cyc_st_2 = else_7_else_1_else_div_4cyc_st_1;
        else_7_else_1_else_div_4cyc_st_1 = else_7_else_1_else_div_4cyc_st;
        main_stage_0_5 = main_stage_0_4;
        main_stage_0_4 = main_stage_0_3;
        main_stage_0_3 = main_stage_0_2;
        main_stage_0_2 = 1'b1;
      end
    end
    mut_47_sg1_1 = 10'b0;
    mut_46_sg1_1 = 10'b0;
    mut_45_sg1_1 = 10'b0;
    mut_44_sg1_1 = 10'b0;
    mut_43_sg1_1 = 10'b0;
    mut_42_sg1_1 = 10'b0;
    mut_41_sg1_1 = 10'b0;
    mut_40_sg1_1 = 10'b0;
    mut_39_sg1_1 = 10'b0;
    mut_38_sg1_1 = 10'b0;
    mut_37_sg1_1 = 10'b0;
    mut_36_sg1_1 = 10'b0;
    mut_35_sg1_1 = 10'b0;
    mut_34_sg1_1 = 10'b0;
    mut_33_sg1_1 = 10'b0;
    mut_32_sg1_1 = 10'b0;
    mut_31_sg1_1 = 10'b0;
    mut_30_sg1_1 = 10'b0;
    mut_29_sg1_1 = 10'b0;
    mut_28_sg1_1 = 10'b0;
    mut_27_sg1_1 = 10'b0;
    mut_26_sg1_1 = 10'b0;
    mut_25_sg1_1 = 10'b0;
    mut_24_sg1_1 = 10'b0;
    mut_23_sg1_1 = 10'b0;
    mut_22_sg1_1 = 10'b0;
    mut_21_sg1_1 = 10'b0;
    mut_20_sg1_1 = 10'b0;
    mut_19_sg1_1 = 10'b0;
    mut_18_sg1_1 = 10'b0;
    mut_17_sg1_1 = 10'b0;
    mut_16_sg1_1 = 10'b0;
    mut_15_sg1_1 = 10'b0;
    mut_14_sg1_1 = 10'b0;
    mut_13_sg1_1 = 10'b0;
    mut_12_sg1_1 = 10'b0;
    mut_11_sg1_1 = 10'b0;
    mut_10_sg1_1 = 10'b0;
    mut_9_sg1_1 = 10'b0;
    mut_8_sg1_1 = 10'b0;
    mut_7_sg1_1 = 10'b0;
    mut_6_sg1_1 = 10'b0;
    mut_5_sg1_1 = 10'b0;
    mut_4_sg1_1 = 10'b0;
    mut_3_sg1_1 = 10'b0;
    mut_2_sg1_1 = 10'b0;
    mut_1_sg1_1 = 10'b0;
    mut_sg1_1 = 10'b0;
    else_7_if_conc_1_tmp_mut_3_sg1 = 10'b0;
    else_7_if_conc_1_tmp_mut_2_sg1 = 10'b0;
    else_7_if_1_conc_1_tmp_mut_15_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_14_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_13_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_12_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_11_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_10_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_9_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_8_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_7_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_15_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_14_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_13_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_12_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_11_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_10_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_9_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_8_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_7_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_6_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_5_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_4_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_15_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_14_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_13_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_12_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_11_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_10_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_9_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_8_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_7_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_6_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_5_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_4_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_6_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_5_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_4_sg1 = 11'b0;
    else_7_if_conc_1_tmp_mut_1_sg1 = 10'b0;
    else_7_if_conc_1_tmp_mut_sg1 = 10'b0;
    else_7_if_1_conc_1_tmp_mut_3_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_2_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_1_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_3_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_2_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_1_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_mut_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_3_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_2_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_1_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_mut_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_mut_sg1 = 11'b0;
    else_7_else_1_else_conc_tmp_sg1 = 11'b0;
    else_7_else_1_if_conc_tmp_sg1 = 11'b0;
    else_7_if_1_conc_1_tmp_sg1 = 11'b0;
    main_stage_0_5 = 1'b0;
    main_stage_0_4 = 1'b0;
    main_stage_0_3 = 1'b0;
    main_stage_0_2 = 1'b0;
    else_7_else_1_else_div_4cyc_st_4 = 2'b0;
    else_7_else_1_else_div_4cyc_st_3 = 2'b0;
    else_7_else_1_else_div_4cyc_st_2 = 2'b0;
    else_7_else_1_else_div_4cyc_st_1 = 2'b0;
    else_7_else_1_if_div_4cyc_st_4 = 2'b0;
    else_7_else_1_equal_svs_st_4 = 1'b0;
    else_7_else_1_if_div_4cyc_st_3 = 2'b0;
    else_7_else_1_if_div_4cyc_st_2 = 2'b0;
    else_7_else_1_if_div_4cyc_st_1 = 2'b0;
    else_7_else_1_equal_svs_st_3 = 1'b0;
    else_7_else_1_equal_svs_st_2 = 1'b0;
    else_7_else_1_equal_svs_st_1 = 1'b0;
    else_7_if_1_div_4cyc_st_4 = 2'b0;
    else_7_equal_svs_st_4 = 1'b0;
    acc_2_psp_sva_st_4 = 10'b0;
    else_7_if_1_div_4cyc_st_3 = 2'b0;
    else_7_if_1_div_4cyc_st_2 = 2'b0;
    else_7_if_1_div_4cyc_st_1 = 2'b0;
    else_7_equal_svs_st_3 = 1'b0;
    else_7_equal_svs_st_2 = 1'b0;
    else_7_equal_svs_st_1 = 1'b0;
    else_7_if_div_2cyc_st_3 = 1'b0;
    else_7_if_div_2cyc_st_2 = 1'b0;
    max_sg1_lpi_dfm_3_st_3 = 10'b0;
    max_sg1_lpi_dfm_3_st_2 = 10'b0;
    acc_2_psp_sva_st_3 = 10'b0;
    acc_2_psp_sva_st_2 = 10'b0;
    else_7_if_div_2cyc_st_1 = 1'b0;
    max_sg1_lpi_dfm_3_st_1 = 10'b0;
    acc_2_psp_sva_st_1 = 10'b0;
    acc_5_itm_4 = 9'b0;
    acc_5_itm_3 = 9'b0;
    acc_5_itm_2 = 9'b0;
    acc_5_itm_1 = 9'b0;
    acc_4_itm_1 = 10'b0;
    acc_4_itm = 10'b0;
    else_7_else_1_else_div_4cyc_st = 2'b0;
    else_7_else_1_if_div_4cyc_st = 2'b0;
    else_7_else_1_equal_svs_st = 1'b0;
    else_7_if_1_div_4cyc_st = 2'b0;
    else_7_equal_svs_st = 1'b0;
    else_7_if_div_2cyc_st = 1'b0;
    max_sg1_lpi_dfm_3_st = 10'b0;
    max_sg1_lpi_dfm_3_mut_3 = 10'b0;
    max_sg1_lpi_dfm_3_mut_2 = 10'b0;
    else_7_equal_svs_4 = 1'b0;
    else_7_equal_svs_3 = 1'b0;
    else_7_equal_svs_2 = 1'b0;
    else_7_equal_svs_1 = 1'b0;
    unequal_tmp_8 = 1'b0;
    unequal_tmp_7 = 1'b0;
    unequal_tmp_6 = 1'b0;
    unequal_tmp_5 = 1'b0;
    unequal_tmp_4 = 1'b0;
    unequal_tmp_3 = 1'b0;
    unequal_tmp_2 = 1'b0;
    else_7_else_1_equal_svs_4 = 1'b0;
    else_7_else_1_equal_svs_3 = 1'b0;
    else_7_else_1_equal_svs_2 = 1'b0;
    else_7_else_1_equal_svs_1 = 1'b0;
    max_sg1_lpi_dfm_3_mut_1 = 10'b0;
    max_sg1_lpi_dfm_3_mut = 10'b0;
    div_sdt_3_sva_duc = 9'b0;
    else_7_else_1_else_div_4cyc = 2'b0;
    div_sdt_2_sva_duc = 9'b0;
    else_7_else_1_if_div_4cyc = 2'b0;
    else_7_if_1_ac_fixed_cctor_sg1_1_sva_duc = 9'b0;
    else_7_if_1_div_4cyc = 2'b0;
    s_sg1_1_sva_2_duc = 18'b0;
    else_7_if_div_2cyc = 1'b0;
    asn_rnd_1_sg1_sva = 11'b0;
    h_sg5_3_sva_2 = 7'b0;
    else_7_acc_psp_sva = 9'b0;
    h_sg5_2_lpi_dfm_1 = 6'b0;
    h_sg2_lpi_dfm_1 = 1'b0;
    h_sg3_lpi_dfm_1 = 1'b0;
    h_sg4_lpi_dfm_1 = 1'b0;
    else_7_else_1_else_ac_fixed_cctor_sg2_1_sva = 7'b0;
    else_7_else_1_if_ac_fixed_cctor_sg2_1_sva = 8'b0;
    else_7_else_1_equal_svs = 1'b0;
    else_7_equal_svs = 1'b0;
    s_sg1_1_lpi_dfm = 18'b0;
    b_1_lpi_dfm = 10'b0;
    g_1_lpi_dfm = 10'b0;
    r_1_lpi_dfm = 10'b0;
    unequal_tmp_1 = 1'b0;
    acc_2_psp_sva = 10'b0;
    v_sg1_sva = 9'b0;
    else_5_slc_svs = 1'b0;
    if_3_slc_svs = 1'b0;
    slc_1_svs = 1'b0;
    max_sg1_lpi_dfm_3 = 10'b0;
    else_1_slc_svs = 1'b0;
    if_slc_svs = 1'b0;
    slc_svs = 1'b0;
    b_1_sva = 10'b0;
    g_1_sva = 10'b0;
    r_1_sva = 10'b0;
    div_mgc_div_13_b <= 10'b0;
    div_mgc_div_13_a <= 20'b0;
    div_mgc_div_12_b <= 10'b0;
    div_mgc_div_12_a <= 20'b0;
    div_mgc_div_11_b <= 21'b0;
    div_mgc_div_11_a <= 21'b0;
    div_mgc_div_10_b <= 21'b0;
    div_mgc_div_10_a <= 21'b0;
    div_mgc_div_9_b <= 21'b0;
    div_mgc_div_9_a <= 21'b0;
    div_mgc_div_8_b <= 21'b0;
    div_mgc_div_8_a <= 21'b0;
    div_mgc_div_7_b <= 21'b0;
    div_mgc_div_7_a <= 21'b0;
    div_mgc_div_6_b <= 21'b0;
    div_mgc_div_6_a <= 21'b0;
    div_mgc_div_5_b <= 21'b0;
    div_mgc_div_5_a <= 21'b0;
    div_mgc_div_4_b <= 21'b0;
    div_mgc_div_4_a <= 21'b0;
    div_mgc_div_3_b <= 21'b0;
    div_mgc_div_3_a <= 21'b0;
    div_mgc_div_2_b <= 21'b0;
    div_mgc_div_2_a <= 21'b0;
    div_mgc_div_1_b <= 21'b0;
    div_mgc_div_1_a <= 21'b0;
    div_mgc_div_b <= 21'b0;
    div_mgc_div_a <= 21'b0;
    V_OUT_rsc_mgc_out_stdreg_d <= 10'b0;
    S_OUT_rsc_mgc_out_stdreg_d <= 10'b0;
    H_OUT_rsc_mgc_out_stdreg_d <= 10'b0;
    else_7_if_div_2cyc = 1'b0;
    else_7_if_1_div_4cyc = 2'b0;
    else_7_else_1_if_div_4cyc = 2'b0;
    else_7_else_1_else_div_4cyc = 2'b0;
    main_stage_0_2 = 1'b0;
    main_stage_0_3 = 1'b0;
    main_stage_0_4 = 1'b0;
    main_stage_0_5 = 1'b0;
    div_mgc_div_a <= 21'b0;
    div_mgc_div_b <= 21'b0;
    div_mgc_div_1_a <= 21'b0;
    div_mgc_div_1_b <= 21'b0;
    div_mgc_div_2_a <= 21'b0;
    div_mgc_div_2_b <= 21'b0;
    div_mgc_div_3_a <= 21'b0;
    div_mgc_div_3_b <= 21'b0;
    div_mgc_div_4_a <= 21'b0;
    div_mgc_div_4_b <= 21'b0;
    div_mgc_div_5_a <= 21'b0;
    div_mgc_div_5_b <= 21'b0;
    div_mgc_div_6_a <= 21'b0;
    div_mgc_div_6_b <= 21'b0;
    div_mgc_div_7_a <= 21'b0;
    div_mgc_div_7_b <= 21'b0;
    div_mgc_div_8_a <= 21'b0;
    div_mgc_div_8_b <= 21'b0;
    div_mgc_div_9_a <= 21'b0;
    div_mgc_div_9_b <= 21'b0;
    div_mgc_div_10_a <= 21'b0;
    div_mgc_div_10_b <= 21'b0;
    div_mgc_div_11_a <= 21'b0;
    div_mgc_div_11_b <= 21'b0;
    div_mgc_div_12_a <= 20'b0;
    div_mgc_div_12_b <= 10'b0;
    div_mgc_div_13_a <= 20'b0;
    div_mgc_div_13_b <= 10'b0;
  end


  function [0:0] MUX_s_1_2_2;
    input [1:0] inputs;
    input [0:0] sel;
    reg [0:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[1:1];
      end
      1'b1 : begin
        result = inputs[0:0];
      end
      default : begin
        result = inputs[1:1];
      end
    endcase
    MUX_s_1_2_2 = result;
  end
  endfunction


  function [5:0] MUX1HOT_v_6_3_2;
    input [17:0] inputs;
    input [2:0] sel;
    reg [5:0] result;
    integer i;
  begin
    result = inputs[0+:6] & {6{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*6+:6] & {6{sel[i]}});
    MUX1HOT_v_6_3_2 = result;
  end
  endfunction


  function [8:0] readslicef_10_9_1;
    input [9:0] vector;
    reg [9:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_10_9_1 = tmp[8:0];
  end
  endfunction


  function [6:0] MUX_v_7_2_2;
    input [13:0] inputs;
    input [0:0] sel;
    reg [6:0] result;
  begin
    case (sel)
      1'b0 : begin
        result = inputs[13:7];
      end
      1'b1 : begin
        result = inputs[6:0];
      end
      default : begin
        result = inputs[13:7];
      end
    endcase
    MUX_v_7_2_2 = result;
  end
  endfunction


  function [10:0] readslicef_18_11_7;
    input [17:0] vector;
    reg [17:0] tmp;
  begin
    tmp = vector >> 7;
    readslicef_18_11_7 = tmp[10:0];
  end
  endfunction


  function [0:0] readslicef_12_1_11;
    input [11:0] vector;
    reg [11:0] tmp;
  begin
    tmp = vector >> 11;
    readslicef_12_1_11 = tmp[0:0];
  end
  endfunction


  function [9:0] MUX1HOT_v_10_3_2;
    input [29:0] inputs;
    input [2:0] sel;
    reg [9:0] result;
    integer i;
  begin
    result = inputs[0+:10] & {10{sel[0]}};
    for( i = 1; i < 3; i = i + 1 )
      result = result | (inputs[i*10+:10] & {10{sel[i]}});
    MUX1HOT_v_10_3_2 = result;
  end
  endfunction


  function [8:0] readslicef_14_9_5;
    input [13:0] vector;
    reg [13:0] tmp;
  begin
    tmp = vector >> 5;
    readslicef_14_9_5 = tmp[8:0];
  end
  endfunction


  function [9:0] readslicef_11_10_1;
    input [10:0] vector;
    reg [10:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_11_10_1 = tmp[9:0];
  end
  endfunction


  function [10:0] readslicef_12_11_1;
    input [11:0] vector;
    reg [11:0] tmp;
  begin
    tmp = vector >> 1;
    readslicef_12_11_1 = tmp[10:0];
  end
  endfunction


  function  [17:0] conv_u2u_36_18 ;
    input [35:0]  vector ;
  begin
    conv_u2u_36_18 = vector[17:0];
  end
  endfunction


  function  [9:0] conv_u2u_1_10 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_10 = {{9{1'b0}}, vector};
  end
  endfunction


  function  [11:0] conv_u2u_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2u_11_12 = {1'b0, vector};
  end
  endfunction


  function  [13:0] conv_u2u_28_14 ;
    input [27:0]  vector ;
  begin
    conv_u2u_28_14 = vector[13:0];
  end
  endfunction


  function  [13:0] conv_u2u_10_14 ;
    input [9:0]  vector ;
  begin
    conv_u2u_10_14 = {{4{1'b0}}, vector};
  end
  endfunction


  function signed [11:0] conv_u2s_11_12 ;
    input [10:0]  vector ;
  begin
    conv_u2s_11_12 = {1'b0, vector};
  end
  endfunction


  function  [8:0] conv_u2u_8_9 ;
    input [7:0]  vector ;
  begin
    conv_u2u_8_9 = {1'b0, vector};
  end
  endfunction


  function  [8:0] conv_u2u_1_9 ;
    input [0:0]  vector ;
  begin
    conv_u2u_1_9 = {{8{1'b0}}, vector};
  end
  endfunction

endmodule

// ------------------------------------------------------------------
//  Design Unit:    HSVRGB
//  Generated from file(s):
//    9) $PROJECT_HOME/RGBHSV.cpp
// ------------------------------------------------------------------


module HSVRGB (
  r_rsc_z, g_rsc_z, b_rsc_z, H_OUT_rsc_z, S_OUT_rsc_z, V_OUT_rsc_z, clk, arst_n
);
  input [9:0] r_rsc_z;
  input [9:0] g_rsc_z;
  input [9:0] b_rsc_z;
  output [9:0] H_OUT_rsc_z;
  output [9:0] S_OUT_rsc_z;
  output [9:0] V_OUT_rsc_z;
  input clk;
  input arst_n;


  // Interconnect Declarations
  wire [9:0] r_rsc_mgc_in_wire_d;
  wire [9:0] g_rsc_mgc_in_wire_d;
  wire [9:0] b_rsc_mgc_in_wire_d;
  wire [9:0] H_OUT_rsc_mgc_out_stdreg_d;
  wire [9:0] S_OUT_rsc_mgc_out_stdreg_d;
  wire [9:0] V_OUT_rsc_mgc_out_stdreg_d;
  wire [20:0] div_mgc_div_a;
  wire [20:0] div_mgc_div_b;
  wire [20:0] div_mgc_div_z;
  wire [20:0] div_mgc_div_1_a;
  wire [20:0] div_mgc_div_1_b;
  wire [20:0] div_mgc_div_1_z;
  wire [20:0] div_mgc_div_2_a;
  wire [20:0] div_mgc_div_2_b;
  wire [20:0] div_mgc_div_2_z;
  wire [20:0] div_mgc_div_3_a;
  wire [20:0] div_mgc_div_3_b;
  wire [20:0] div_mgc_div_3_z;
  wire [20:0] div_mgc_div_4_a;
  wire [20:0] div_mgc_div_4_b;
  wire [20:0] div_mgc_div_4_z;
  wire [20:0] div_mgc_div_5_a;
  wire [20:0] div_mgc_div_5_b;
  wire [20:0] div_mgc_div_5_z;
  wire [20:0] div_mgc_div_6_a;
  wire [20:0] div_mgc_div_6_b;
  wire [20:0] div_mgc_div_6_z;
  wire [20:0] div_mgc_div_7_a;
  wire [20:0] div_mgc_div_7_b;
  wire [20:0] div_mgc_div_7_z;
  wire [20:0] div_mgc_div_8_a;
  wire [20:0] div_mgc_div_8_b;
  wire [20:0] div_mgc_div_8_z;
  wire [20:0] div_mgc_div_9_a;
  wire [20:0] div_mgc_div_9_b;
  wire [20:0] div_mgc_div_9_z;
  wire [20:0] div_mgc_div_10_a;
  wire [20:0] div_mgc_div_10_b;
  wire [20:0] div_mgc_div_10_z;
  wire [20:0] div_mgc_div_11_a;
  wire [20:0] div_mgc_div_11_b;
  wire [20:0] div_mgc_div_11_z;
  wire [19:0] div_mgc_div_12_a;
  wire [9:0] div_mgc_div_12_b;
  wire [19:0] div_mgc_div_12_z;
  reg [19:0] div_mgc_div_12_z_oreg;
  wire [19:0] div_mgc_div_13_a;
  wire [9:0] div_mgc_div_13_b;
  wire [19:0] div_mgc_div_13_z;
  reg [19:0] div_mgc_div_13_z_oreg;


  // Interconnect Declarations for Component Instantiations 
  mgc_in_wire #(.rscid(1),
  .width(10)) r_rsc_mgc_in_wire (
      .d(r_rsc_mgc_in_wire_d),
      .z(r_rsc_z)
    );
  mgc_in_wire #(.rscid(2),
  .width(10)) g_rsc_mgc_in_wire (
      .d(g_rsc_mgc_in_wire_d),
      .z(g_rsc_z)
    );
  mgc_in_wire #(.rscid(3),
  .width(10)) b_rsc_mgc_in_wire (
      .d(b_rsc_mgc_in_wire_d),
      .z(b_rsc_z)
    );
  mgc_out_stdreg #(.rscid(4),
  .width(10)) H_OUT_rsc_mgc_out_stdreg (
      .d(H_OUT_rsc_mgc_out_stdreg_d),
      .z(H_OUT_rsc_z)
    );
  mgc_out_stdreg #(.rscid(5),
  .width(10)) S_OUT_rsc_mgc_out_stdreg (
      .d(S_OUT_rsc_mgc_out_stdreg_d),
      .z(S_OUT_rsc_z)
    );
  mgc_out_stdreg #(.rscid(6),
  .width(10)) V_OUT_rsc_mgc_out_stdreg (
      .d(V_OUT_rsc_mgc_out_stdreg_d),
      .z(V_OUT_rsc_z)
    );
  mgc_div #(.width_a(21),
  .width_b(21),
  .signd(1)) div_mgc_div (
      .a(div_mgc_div_a),
      .b(div_mgc_div_b),
      .z(div_mgc_div_z)
    );
  mgc_div #(.width_a(21),
  .width_b(21),
  .signd(1)) div_mgc_div_1 (
      .a(div_mgc_div_1_a),
      .b(div_mgc_div_1_b),
      .z(div_mgc_div_1_z)
    );
  mgc_div #(.width_a(21),
  .width_b(21),
  .signd(1)) div_mgc_div_2 (
      .a(div_mgc_div_2_a),
      .b(div_mgc_div_2_b),
      .z(div_mgc_div_2_z)
    );
  mgc_div #(.width_a(21),
  .width_b(21),
  .signd(1)) div_mgc_div_3 (
      .a(div_mgc_div_3_a),
      .b(div_mgc_div_3_b),
      .z(div_mgc_div_3_z)
    );
  mgc_div #(.width_a(21),
  .width_b(21),
  .signd(1)) div_mgc_div_4 (
      .a(div_mgc_div_4_a),
      .b(div_mgc_div_4_b),
      .z(div_mgc_div_4_z)
    );
  mgc_div #(.width_a(21),
  .width_b(21),
  .signd(1)) div_mgc_div_5 (
      .a(div_mgc_div_5_a),
      .b(div_mgc_div_5_b),
      .z(div_mgc_div_5_z)
    );
  mgc_div #(.width_a(21),
  .width_b(21),
  .signd(1)) div_mgc_div_6 (
      .a(div_mgc_div_6_a),
      .b(div_mgc_div_6_b),
      .z(div_mgc_div_6_z)
    );
  mgc_div #(.width_a(21),
  .width_b(21),
  .signd(1)) div_mgc_div_7 (
      .a(div_mgc_div_7_a),
      .b(div_mgc_div_7_b),
      .z(div_mgc_div_7_z)
    );
  mgc_div #(.width_a(21),
  .width_b(21),
  .signd(1)) div_mgc_div_8 (
      .a(div_mgc_div_8_a),
      .b(div_mgc_div_8_b),
      .z(div_mgc_div_8_z)
    );
  mgc_div #(.width_a(21),
  .width_b(21),
  .signd(1)) div_mgc_div_9 (
      .a(div_mgc_div_9_a),
      .b(div_mgc_div_9_b),
      .z(div_mgc_div_9_z)
    );
  mgc_div #(.width_a(21),
  .width_b(21),
  .signd(1)) div_mgc_div_10 (
      .a(div_mgc_div_10_a),
      .b(div_mgc_div_10_b),
      .z(div_mgc_div_10_z)
    );
  mgc_div #(.width_a(21),
  .width_b(21),
  .signd(1)) div_mgc_div_11 (
      .a(div_mgc_div_11_a),
      .b(div_mgc_div_11_b),
      .z(div_mgc_div_11_z)
    );
  mgc_div #(.width_a(20),
  .width_b(10),
  .signd(0)) div_mgc_div_12 (
      .a(div_mgc_div_12_a),
      .b(div_mgc_div_12_b),
      .z(div_mgc_div_12_z)
    );
  mgc_div #(.width_a(20),
  .width_b(10),
  .signd(0)) div_mgc_div_13 (
      .a(div_mgc_div_13_a),
      .b(div_mgc_div_13_b),
      .z(div_mgc_div_13_z)
    );
  HSVRGB_core HSVRGB_core_inst (
      .clk(clk),
      .arst_n(arst_n),
      .r_rsc_mgc_in_wire_d(r_rsc_mgc_in_wire_d),
      .g_rsc_mgc_in_wire_d(g_rsc_mgc_in_wire_d),
      .b_rsc_mgc_in_wire_d(b_rsc_mgc_in_wire_d),
      .H_OUT_rsc_mgc_out_stdreg_d(H_OUT_rsc_mgc_out_stdreg_d),
      .S_OUT_rsc_mgc_out_stdreg_d(S_OUT_rsc_mgc_out_stdreg_d),
      .V_OUT_rsc_mgc_out_stdreg_d(V_OUT_rsc_mgc_out_stdreg_d),
      .div_mgc_div_a(div_mgc_div_a),
      .div_mgc_div_b(div_mgc_div_b),
      .div_mgc_div_z(div_mgc_div_z),
      .div_mgc_div_1_a(div_mgc_div_1_a),
      .div_mgc_div_1_b(div_mgc_div_1_b),
      .div_mgc_div_1_z(div_mgc_div_1_z),
      .div_mgc_div_2_a(div_mgc_div_2_a),
      .div_mgc_div_2_b(div_mgc_div_2_b),
      .div_mgc_div_2_z(div_mgc_div_2_z),
      .div_mgc_div_3_a(div_mgc_div_3_a),
      .div_mgc_div_3_b(div_mgc_div_3_b),
      .div_mgc_div_3_z(div_mgc_div_3_z),
      .div_mgc_div_4_a(div_mgc_div_4_a),
      .div_mgc_div_4_b(div_mgc_div_4_b),
      .div_mgc_div_4_z(div_mgc_div_4_z),
      .div_mgc_div_5_a(div_mgc_div_5_a),
      .div_mgc_div_5_b(div_mgc_div_5_b),
      .div_mgc_div_5_z(div_mgc_div_5_z),
      .div_mgc_div_6_a(div_mgc_div_6_a),
      .div_mgc_div_6_b(div_mgc_div_6_b),
      .div_mgc_div_6_z(div_mgc_div_6_z),
      .div_mgc_div_7_a(div_mgc_div_7_a),
      .div_mgc_div_7_b(div_mgc_div_7_b),
      .div_mgc_div_7_z(div_mgc_div_7_z),
      .div_mgc_div_8_a(div_mgc_div_8_a),
      .div_mgc_div_8_b(div_mgc_div_8_b),
      .div_mgc_div_8_z(div_mgc_div_8_z),
      .div_mgc_div_9_a(div_mgc_div_9_a),
      .div_mgc_div_9_b(div_mgc_div_9_b),
      .div_mgc_div_9_z(div_mgc_div_9_z),
      .div_mgc_div_10_a(div_mgc_div_10_a),
      .div_mgc_div_10_b(div_mgc_div_10_b),
      .div_mgc_div_10_z(div_mgc_div_10_z),
      .div_mgc_div_11_a(div_mgc_div_11_a),
      .div_mgc_div_11_b(div_mgc_div_11_b),
      .div_mgc_div_11_z(div_mgc_div_11_z),
      .div_mgc_div_12_a(div_mgc_div_12_a),
      .div_mgc_div_12_b(div_mgc_div_12_b),
      .div_mgc_div_12_z_oreg(div_mgc_div_12_z_oreg),
      .div_mgc_div_13_a(div_mgc_div_13_a),
      .div_mgc_div_13_b(div_mgc_div_13_b),
      .div_mgc_div_13_z_oreg(div_mgc_div_13_z_oreg)
    );
  always @(posedge clk or negedge arst_n) begin
    if ( ~ arst_n ) begin
      div_mgc_div_12_z_oreg <= 20'b0;
      div_mgc_div_13_z_oreg <= 20'b0;
    end
    else begin
      div_mgc_div_12_z_oreg <= div_mgc_div_12_z;
      div_mgc_div_13_z_oreg <= div_mgc_div_13_z;
    end
  end
endmodule



